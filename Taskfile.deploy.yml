version: "3"

# Taskfile for deployment operations

vars:
  # Contract to deploy (default to All)
  CONTRACT: '{{.CONTRACT | default "All"}}'

  # Deployment parameters
  GAS_LIMIT: '{{.GAS_LIMIT | default "8000000"}}'
  VERIFY: '{{.VERIFY | default "true"}}'
  LEGACY: '{{.LEGACY | default "--legacy"}}'

tasks:
  # Help command
  help:
    desc: Show deployment command usage
    cmds:
      - cmd: |
          echo "üî∂ Deployment Commands"
          echo ""
          echo "Usage:"
          echo "  task deploy [NETWORK=<network>] [CONTRACT=<contract>]"
          echo ""
          echo "Examples:"
          echo "  task deploy NETWORK=sepolia                   # Deploy All tokens"
          echo "  task deploy NETWORK=gnosis CONTRACT=EUR       # Deploy EUR only"
          echo "  task deploy NETWORK=localhost CONTRACT=Dev    # Deploy dev tokens"
          echo ""
          echo "Available networks: (run 'task networks' for details)"
          echo "  mainnet, sepolia, arbitrum, arbitrum-sepolia, polygon, etc."
          echo ""
          echo "Available contracts: (run 'task contracts' for details)"
          echo "  All, EUR, GBP, USD, ISK, Dev, AllControllerGnosis, etc."
        silent: true

  # Main deployment task
  default:
    desc: Deploy contracts
    cmds:
      - cmd: |
          if [ -z "{{.NETWORK}}" ]; then
            echo "Usage: task deploy NETWORK=<network> [CONTRACT=<contract>]"
            echo "Run 'task deploy help' for more details"
            exit 0
          fi

          # Get network-specific RPC URL
          RPC_VAR="{{.NETWORK | upper}}_RPC"

          # Determine contract-network adjustments
          if [ -z "{{.CONTRACT}}" ] || [ "{{.CONTRACT}}" = "All" ]; then
            if [ "{{.NETWORK}}" = "gnosis" ] || [ "{{.NETWORK}}" = "gnosis-chiado" ]; then
              export CONTRACT="AllControllerGnosis"
              echo "Using Gnosis controller for this network"
            elif [ "{{.NETWORK}}" = "polygon" ] || [ "{{.NETWORK}}" = "polygon-amoy" ]; then
              export CONTRACT="AllControllerPolygon"
              echo "Using Polygon controller for this network"
            else
              export CONTRACT="All"
            fi
          else
            export CONTRACT="{{.CONTRACT}}"
          fi

          # Confirmation
          if [ "{{.SKIP_CONFIRM}}" != "true" ]; then
            echo -e "\n‚ö†Ô∏è  WARNING: You are about to deploy $CONTRACT to {{.NETWORK}} network"
            echo -e "\nContinue? (y/N): "
            read -r response
            if [ "$response" != "y" ] && [ "$response" != "Y" ]; then
              echo "Operation cancelled."
              exit 1
            fi
            echo "Proceeding with deployment..."
          fi

          # Execute deployment
          forge script script/deploy.s.sol:$CONTRACT \
            --rpc-url ${!RPC_VAR} \
            --broadcast \
            {{if eq .VERIFY "true"}}--verify{{end}} \
            --gas-limit {{.GAS_LIMIT}} \
            -{{.VERBOSITY}} \
            {{.LEGACY}}
        silent: true

  # Convenience commands
  local:
    desc: Deploy to local development environment
    cmds:
      - task: default
        vars:
          NETWORK: "localhost"
          CONTRACT: '{{.CONTRACT | default "Dev"}}'
          VERIFY: "false"

  testnet:
    desc: Deploy to a testnet with safety checks
    cmds:
      - cmd: |
          if [ -z "{{.NETWORK}}" ]; then
            echo "‚ùå Missing required NETWORK parameter"
            echo "Usage: task deploy:testnet NETWORK=<testnet> [CONTRACT=<contract>]"
            exit 1
          fi

          # Validate that this is actually a testnet
          if [[ "{{.NETWORK}}" != *"sepolia"* && "{{.NETWORK}}" != *"fuji"* && "{{.NETWORK}}" != *"chiado"* && "{{.NETWORK}}" != *"amoy"* && "{{.NETWORK}}" != "localhost" ]]; then
            echo "‚ö†Ô∏è Warning: {{.NETWORK}} doesn't appear to be a testnet. Continue anyway? (y/N): "
            read -r response
            if [ "$response" != "y" ] && [ "$response" != "Y" ]; then
              echo "Operation cancelled."
              exit 1
            fi
          fi
        silent: true
      - task: default
        vars:
          NETWORK: "{{.NETWORK}}"
          CONTRACT: '{{.CONTRACT | default "All"}}'

  # Helper tasks for deployment
  estimate-gas:
    desc: Estimate gas for deployment
    cmds:
      - cmd: |
          if [ -z "{{.NETWORK}}" ]; then
            echo "‚ùå Missing required NETWORK parameter"
            echo "Usage: task deploy:estimate-gas NETWORK=<network> [CONTRACT=<contract>]"
            exit 1
          fi

          # Get network-specific RPC URL
          RPC_VAR="{{.NETWORK | upper}}_RPC"

          echo "‚õΩ Estimating gas for deploying {{.CONTRACT}} to {{.NETWORK}}..."
          forge script script/deploy.s.sol:{{.CONTRACT}} \
            --rpc-url ${!RPC_VAR} \
            -{{.VERBOSITY}} \
            --gas-report
        silent: true

  # Specialized deployments
  validator:
    desc: Deploy only the BlacklistValidator
    cmds:
      - task: default
        vars:
          CONTRACT: "BlacklistValidator"
