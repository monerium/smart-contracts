version: "3"

# Taskfile for deployment operations with logic separated into scripts

vars:
  # Contract to deploy (default to All)
  CONTRACT: '{{.CONTRACT | default "All"}}'

  # Deployment parameters
  GAS_LIMIT: '{{.GAS_LIMIT | default "8000000"}}'
  VERIFY: '{{.VERIFY | default "true"}}'
  LEGACY: '{{.LEGACY | default "--legacy"}}'
  VERBOSITY: '{{.VERBOSITY | default "v"}}'

tasks:
  # Help command
  help:
    desc: Show deployment command usage
    cmds:
      - cmd: |
          echo "üî∂ Deployment Commands"
          echo ""
          echo "Usage:"
          echo "  task deploy [NETWORK=<network>] [CONTRACT=<contract>]"
          echo ""
          echo "Examples:"
          echo "  task deploy NETWORK=sepolia                   # Deploy All tokens"
          echo "  task deploy NETWORK=gnosis CONTRACT=EUR       # Deploy EUR only"
          echo "  task deploy NETWORK=localhost CONTRACT=Dev    # Deploy dev tokens"
          echo ""
          echo "Available networks: (run 'task networks' for details)"
          echo "  mainnet, sepolia, arbitrum, arbitrum-sepolia, polygon, etc."
          echo ""
          echo "Available contracts: (run 'task contracts' for details)"
          echo "  All, EUR, GBP, USD, ISK, Dev, AllControllerGnosis, etc."
        silent: true

  # Main deployment task
  default:
    desc: Deploy contracts
    cmds:
      - cmd: |
          if [ -z "{{.NETWORK}}" ]; then
            echo "Usage: task deploy NETWORK=<network> [CONTRACT=<contract>]"
            echo "Run 'task deploy help' for more details"
            exit 0
          fi

          # Call deploy function from external script
          bash script/deploy.sh deploy "{{.NETWORK}}" "{{.CONTRACT}}" "{{.GAS_LIMIT}}" "{{.VERIFY}}" "{{.LEGACY}}" "{{.VERBOSITY}}" "{{.SKIP_CONFIRM}}"
        silent: true

  # Convenience commands
  local:
    desc: Deploy to local development environment
    cmds:
      - task: default
        vars:
          NETWORK: "localhost"
          CONTRACT: '{{.CONTRACT | default "Dev"}}'
          VERIFY: "false"

  # Helper tasks for deployment
  estimate-gas:
    desc: Estimate gas for deployment
    cmds:
      - cmd: |
          if [ -z "{{.NETWORK}}" ]; then
            echo "‚ùå Missing required NETWORK parameter"
            echo "Usage: task deploy:estimate-gas NETWORK=<network> [CONTRACT=<contract>]"
            exit 1
          fi

          # Call estimate-gas function from external script
          bash script/deploy.sh estimate-gas "{{.NETWORK}}" "{{.CONTRACT}}" "{{.VERBOSITY}}"
        silent: true

  # Specialized deployments
  validator:
    desc: Deploy only the BlacklistValidator
    cmds:
      - task: default
        vars:
          CONTRACT: "BlacklistValidator"
