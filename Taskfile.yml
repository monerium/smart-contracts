version: "3"
# Main Taskfile that includes other task files
includes:
  deploy: ./Taskfile.deploy.yml
  token: ./Taskfile.token.yml
# Load environment variables from .env file
dotenv: [".env"]
# Global variables and defaults
vars:
  # Network defaults
  NETWORK: '{{.NETWORK | default "localhost"}}'
  # Standard parameters
  VERBOSITY: '{{.VERBOSITY | default "vv"}}'
  SKIP_CONFIRM: '{{.SKIP_CONFIRM | default "false"}}'
# Common tasks and utilities
tasks:
  # Default task
  default:
    desc: Show available task categories
    cmds:
      - cmd: |
          printf "üöÄ Monerium Token Management System\n\n"
          printf "Available categories:\n"
          printf "  deploy   - Deployment commands     (task deploy)\n"
          printf "  token    - Token operations        (task token)\n\n"
          printf "Common commands:\n"
          printf "  task deploy NETWORK=sepolia # Deploy all tokens\n"
          printf "  task token:owner ADDRESS=0x123... # Check owner\n"
          printf "  task token:balance ADDRESS=0x123... ACCOUNT=0x456... # Check balance\n\n"
          printf "Run 'task --list' to see all available tasks\n"
        silent: true
  # Informational tasks
  networks:
    desc: List available networks
    cmds:
      - cmd: |
          printf "üìã Available networks:\n"
          printf "  ethereum         - Ethereum Mainnet\n"
          printf "  sepolia          - Ethereum Sepolia Testnet\n"
          printf "  arbitrum         - Arbitrum Mainnet\n"
          printf "  arbitrum-sepolia - Arbitrum Sepolia Testnet\n"
          printf "  optimism         - Optimism Mainnet\n"
          printf "  optimism-sepolia - Optimism Sepolia Testnet\n"
          printf "  avalanche        - Avalanche Mainnet\n"
          printf "  avalanche-fuji   - Avalanche Fuji Testnet\n"
          printf "  gnosis           - Gnosis Chain\n"
          printf "  gnosis-chiado    - Gnosis Chiado Testnet\n"
          printf "  polygon          - Polygon Mainnet\n"
          printf "  polygon-amoy     - Polygon Amoy Testnet\n"
          printf "  linea            - Linea Mainnet\n"
          printf "  linea-sepolia    - Linea Sepolia Testnet\n"
          printf "  scroll           - Scroll Mainnet\n"
          printf "  scroll-sepolia   - Scroll Sepolia Testnet\n"
          printf "  localhost        - Local development network\n"
        silent: true
  contracts:
    desc: List available contracts to deploy
    cmds:
      - cmd: |
          printf "üìã Available contracts to deploy:\n"
          printf "  All                   - Deploy all tokens (EUR, GBP, USD, ISK)\n"
          printf "  EUR                   - Deploy only EUR token\n"
          printf "  GBP                   - Deploy only GBP token\n"
          printf "  USD                   - Deploy only USD token\n"
          printf "  ISK                   - Deploy only ISK token\n"
          printf "  Dev                   - Deploy all tokens with developer configuration\n"
          printf "  AllControllerGnosis   - Deploy all tokens with Gnosis controller\n"
          printf "  AllControllerPolygon  - Deploy all tokens with Polygon controller\n"
          printf "  AllControllerEthereum - Deploy all tokens with Ethereum controller\n"
          printf "  BlacklistValidator    - Deploy only the validator\n"
        silent: true
  # Helper task to explain parameter format
  help:
    desc: Show how to use task parameters
    cmds:
      - cmd: |
          printf "üîç How to use task parameters:\n\n"
          printf "Parameters are passed without dashes. For example:\n"
          printf "  task token balance ADDRESS=0x123... ACCOUNT=0x456... NETWORK=sepolia\n\n"
          printf "To get help on a specific category:\n"
          printf "  task deploy help\n"
          printf "  task token help\n"
        silent: true
