{
  "contractName": "ConstantValidator",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "valid_",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "valid",
          "type": "bool"
        }
      ],
      "name": "Decision",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "stateMutability": "nonpayable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "claimOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contractAddr",
          "type": "address"
        }
      ],
      "name": "reclaimContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reclaimEther",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20Basic",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "reclaimToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "tokenFallback",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "validate",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"valid_\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"name\":\"Decision\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"claimOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractAddr\",\"type\":\"address\"}],\"name\":\"reclaimContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reclaimEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20Basic\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"reclaimToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"tokenFallback\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"validate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Constantly validates token transfers based on the constructor value.\",\"kind\":\"dev\",\"methods\":{\"claimOwnership()\":{\"details\":\"Allows the pendingOwner address to finalize the transfer.\"},\"constructor\":{\"details\":\"Contract constructor.\",\"params\":{\"valid_\":\"Always return this value when validating.\"}},\"reclaimContract(address)\":{\"details\":\"Reclaim ownership of Ownable contracts\",\"params\":{\"_contractAddr\":\"The address of the Ownable to be reclaimed.\"}},\"reclaimEther()\":{\"details\":\"Transfer all Ether held by the contract to the owner.\"},\"reclaimToken(address)\":{\"details\":\"Reclaim all ERC20Basic compatible tokens\",\"params\":{\"_token\":\"ERC20Basic The address of the token contract\"}},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"tokenFallback(address,uint256,bytes)\":{\"details\":\"Reject all ERC223 compatible tokens\",\"params\":{\"_data\":\"Bytes The data passed from the caller.\",\"_from\":\"address The address that is transferring the tokens\",\"_value\":\"uint256 the amount of the specified token\"}},\"transferOwnership(address)\":{\"details\":\"Explicit override of transferOwnership from Claimable and Ownable\",\"params\":{\"newOwner\":\"Address to transfer ownership to.\"}},\"validate(address,address,uint256)\":{\"details\":\"Validates token transfer. Implements IValidator interface.\"}},\"title\":\"ConstantValidator\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/ConstantValidator.sol\":\"ConstantValidator\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"project:/contracts/ConstantValidator.sol\":{\"keccak256\":\"0x3aa3839823636cabe7ac8a99156ddce09d5a3e9a2c9209969928e5228c33b2b9\",\"license\":\"apache-2.0\",\"urls\":[\"bzz-raw://377e740c70590f65ae17eb6aee0a83544825daf53a74f9b6883a77365413d886\",\"dweb:/ipfs/Qmenf2CU1SyNCWaZezU7ywKWBTAUEup4wS1uJpbWKPrMd1\"]},\"project:/contracts/IValidator.sol\":{\"keccak256\":\"0x1234d1da0e449e4178eab3e25729b697c05dc436f428f3c449c64b59daadce4b\",\"license\":\"apache-2.0\",\"urls\":[\"bzz-raw://39449d31144bd77b26ab275c65c3600bb6a168811ddc6be95eb983199e3ad4cd\",\"dweb:/ipfs/QmUHXT6hE6gkpxmFdKcjSWXsoZj5iRoZJdRiEw6frVdoV2\"]},\"project:/contracts/ownership/CanReclaimToken.sol\":{\"keccak256\":\"0x108e55b7d2d50484b7bf5699b1e0b27b29dcd633c8651ea8ca14e0f805f4d2f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bd1fbc3055642b7150e0616d5add5d19e292dee5bc4fa7a0e5865ee1dc4fe3\",\"dweb:/ipfs/Qme4kZKkizviTR3VjadY7rftSX9UV8pqJB7euV9udVVSVF\"]},\"project:/contracts/ownership/Claimable.sol\":{\"keccak256\":\"0x8e75f21c880f9fa7fa382f5082a1a21bfbfbacad1dd891ed8938ebc31d0d39f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e36385dd2c6c12302dd0b845b501a1a42dc3832ef7d038450a472c112ea272\",\"dweb:/ipfs/QmeFJQKneZXfRJ5hyPTNBc95nLP9ix5n87CuApbHgb7hWb\"]},\"project:/contracts/ownership/HasNoContracts.sol\":{\"keccak256\":\"0x4b56f82527c084cec1ded0d6ce4161615d7e9448b49c904278647701afb89015\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e41dc4c6173f707be7020e600622caaf6461851917b2b1a989d41c74c620e49\",\"dweb:/ipfs/QmR286HLknD5ozrEJcy5tFQunwwe6SBh8tLkr97hPnzu7N\"]},\"project:/contracts/ownership/HasNoEther.sol\":{\"keccak256\":\"0x40c5b0c6c8d908bc764cdcce514c824ce842411f43180111de7d0a75e6ae553e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de45edfc949d8922e1c9f07af298c29edabeb26454d8a2eb093a81b32474d610\",\"dweb:/ipfs/QmZyqeY8y8h6XQ23h2rzpr6bVEa7FCCCu7XwTa8fcJc4cY\"]},\"project:/contracts/ownership/HasNoTokens.sol\":{\"keccak256\":\"0x25be2e066915369ead9f26824c8d22d9523c70cddee5369b092e49503c2ec088\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b52b009a1d8c7a465a81667d691b50301de052b969e05be7bd30a0c5f6846b82\",\"dweb:/ipfs/Qmcsk6qNq9Hy8WYagLQHFrvDYr5783sX4omUWkAeUSXtzy\"]},\"project:/contracts/ownership/NoOwner.sol\":{\"keccak256\":\"0xf0625c71482671d551c3322ea3ab9eceedd2ec0bdbfdb12de13f27a3fffd38b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f0d1ddbbd28155e759df54b2afad17c440b76bae1d66259679ff53b0aca8e81\",\"dweb:/ipfs/QmXdXPDuW2VDBB7YWoms55rb883noVFJXixKoR1namrwJR\"]},\"project:/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x0041c7f55b3f5b57b5fd6d3eec14573596c5f0d59ce8802e08dae01ed6ff7603\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21935211244e684ccbbd0858a4e2194a41c1b3bb36760bbbe4be4b11a63dd4cb\",\"dweb:/ipfs/Qmbw5C8ZJgA4jRPVP3rqohQb7f72YtUGgBg4eMqX3u56Rv\"]},\"project:/contracts/token/ERC20/ERC20Basic.sol\":{\"keccak256\":\"0x54484484f83afe433e6bc50c0003d99c5e877747a783581500a25df8ce7017dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85c97b9279681e06af93f38223117d3351acbe205ed8a47d33c650149ef09bb2\",\"dweb:/ipfs/QmYAcawJZ5tH9e6Syno9fejaaNdpzXbjtWQUhKZyA86g5d\"]},\"project:/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xa4c3829e43d20517869a6555f80977d4e582ae439b6b7c5013960fb05932f635\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d815f26b889c44a2f1703cb59ddf9a5e426447df50ce91e240bc68f046b99465\",\"dweb:/ipfs/QmUTTNoty755VqS2jvZra7HrumCnRNkLcPRihs7W3s4Vj2\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161073b38038061073b83398101604081905261002f9161006d565b600080546001600160a01b03191633179055341561004c57600080fd5b60018054911515600160a01b0260ff60a01b19909216919091179055610096565b60006020828403121561007f57600080fd5b8151801515811461008f57600080fd5b9392505050565b610696806100a56000396000f3fe608060405234801561001057600080fd5b50600436106100b55760003560e01c80639f727c2711610070578063c0ee0b8a11610058578063c0ee0b8a14610168578063e30c39781461017b578063f2fde38b1461018e57005b80639f727c271461011d578063aa3ad4e41461012557005b80634e71e0c81161009e5780634e71e0c8146100dd578063715018a6146100e55780638da5cb5b146100ed57005b806317ffc320146100b75780632aed7f3f146100ca575b005b6100b56100c5366004610537565b6101a1565b6100b56100d8366004610537565b61025d565b6100b56102f1565b6100b5610379565b600054610100906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100b56103e5565b61015861013336600461055b565b505060015474010000000000000000000000000000000000000000900460ff16919050565b6040519015158152602001610114565b6100b561017636600461059c565b600080fd5b600154610100906001600160a01b031681565b6100b561019c366004610537565b610439565b6000546001600160a01b031633146101b857600080fd5b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610218573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023c9190610625565b600054909150610259906001600160a01b03848116911683610442565b5050565b6000546001600160a01b0316331461027457600080fd5b6000546040517ff2fde38b0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152829182169063f2fde38b90602401600060405180830381600087803b1580156102d557600080fd5b505af11580156102e9573d6000803e3d6000fd5b505050505050565b6001546001600160a01b0316331461030857600080fd5b600154600080546040516001600160a01b0393841693909116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600180546000805473ffffffffffffffffffffffffffffffffffffffff199081166001600160a01b03841617909155169055565b6000546001600160a01b0316331461039057600080fd5b600080546040516001600160a01b03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6000546001600160a01b031633146103fc57600080fd5b600080546040516001600160a01b03909116914780156108fc02929091818181858888f19350505050158015610436573d6000803e3d6000fd5b50565b610436816104dc565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af11580156104aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ce919061063e565b6104d757600080fd5b505050565b6000546001600160a01b031633146104f357600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6001600160a01b038116811461043657600080fd5b60006020828403121561054957600080fd5b813561055481610522565b9392505050565b60008060006060848603121561057057600080fd5b833561057b81610522565b9250602084013561058b81610522565b929592945050506040919091013590565b600080600080606085870312156105b257600080fd5b84356105bd81610522565b935060208501359250604085013567ffffffffffffffff808211156105e157600080fd5b818701915087601f8301126105f557600080fd5b81358181111561060457600080fd5b88602082850101111561061657600080fd5b95989497505060200194505050565b60006020828403121561063757600080fd5b5051919050565b60006020828403121561065057600080fd5b8151801515811461055457600080fdfea2646970667358221220a94225ebef816f4869aa48f8c22e9bf3610bfdab6f73257a1bfcedb10013b8d264736f6c634300080b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b55760003560e01c80639f727c2711610070578063c0ee0b8a11610058578063c0ee0b8a14610168578063e30c39781461017b578063f2fde38b1461018e57005b80639f727c271461011d578063aa3ad4e41461012557005b80634e71e0c81161009e5780634e71e0c8146100dd578063715018a6146100e55780638da5cb5b146100ed57005b806317ffc320146100b75780632aed7f3f146100ca575b005b6100b56100c5366004610537565b6101a1565b6100b56100d8366004610537565b61025d565b6100b56102f1565b6100b5610379565b600054610100906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100b56103e5565b61015861013336600461055b565b505060015474010000000000000000000000000000000000000000900460ff16919050565b6040519015158152602001610114565b6100b561017636600461059c565b600080fd5b600154610100906001600160a01b031681565b6100b561019c366004610537565b610439565b6000546001600160a01b031633146101b857600080fd5b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610218573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023c9190610625565b600054909150610259906001600160a01b03848116911683610442565b5050565b6000546001600160a01b0316331461027457600080fd5b6000546040517ff2fde38b0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152829182169063f2fde38b90602401600060405180830381600087803b1580156102d557600080fd5b505af11580156102e9573d6000803e3d6000fd5b505050505050565b6001546001600160a01b0316331461030857600080fd5b600154600080546040516001600160a01b0393841693909116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600180546000805473ffffffffffffffffffffffffffffffffffffffff199081166001600160a01b03841617909155169055565b6000546001600160a01b0316331461039057600080fd5b600080546040516001600160a01b03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6000546001600160a01b031633146103fc57600080fd5b600080546040516001600160a01b03909116914780156108fc02929091818181858888f19350505050158015610436573d6000803e3d6000fd5b50565b610436816104dc565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af11580156104aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ce919061063e565b6104d757600080fd5b505050565b6000546001600160a01b031633146104f357600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6001600160a01b038116811461043657600080fd5b60006020828403121561054957600080fd5b813561055481610522565b9392505050565b60008060006060848603121561057057600080fd5b833561057b81610522565b9250602084013561058b81610522565b929592945050506040919091013590565b600080600080606085870312156105b257600080fd5b84356105bd81610522565b935060208501359250604085013567ffffffffffffffff808211156105e157600080fd5b818701915087601f8301126105f557600080fd5b81358181111561060457600080fd5b88602082850101111561061657600080fd5b95989497505060200194505050565b60006020828403121561063757600080fd5b5051919050565b60006020828403121561065057600080fd5b8151801515811461055457600080fdfea2646970667358221220a94225ebef816f4869aa48f8c22e9bf3610bfdab6f73257a1bfcedb10013b8d264736f6c634300080b0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:293:54",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:54",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "92:199:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "138:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "147:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "150:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "140:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "140:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "140:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "113:7:54"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "122:9:54"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "109:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "109:23:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "134:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "105:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "105:32:54"
                  },
                  "nodeType": "YulIf",
                  "src": "102:52:54"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "163:29:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "182:9:54"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "176:5:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "176:16:54"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "167:5:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "245:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "254:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "257:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "247:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "247:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "247:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "214:5:54"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "235:5:54"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "228:6:54"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "228:13:54"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "221:6:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "221:21:54"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "211:2:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "211:32:54"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "204:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "204:40:54"
                  },
                  "nodeType": "YulIf",
                  "src": "201:60:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "270:15:54",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "280:5:54"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "270:6:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "58:9:54",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "69:7:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "81:6:54",
                "type": ""
              }
            ],
            "src": "14:277:54"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
      "id": 54,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3221:54",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:54",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "71:109:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "158:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "167:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "170:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "160:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "160:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "160:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "94:5:54"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "105:5:54"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "112:42:54",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "101:3:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "101:54:54"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "91:2:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "91:65:54"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "84:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "84:73:54"
                  },
                  "nodeType": "YulIf",
                  "src": "81:93:54"
                }
              ]
            },
            "name": "validator_revert_contract_ERC20Basic",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "60:5:54",
                "type": ""
              }
            ],
            "src": "14:166:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "274:189:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "320:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "329:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "332:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "322:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "322:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "322:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "295:7:54"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "304:9:54"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "291:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "291:23:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "316:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "287:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "287:32:54"
                  },
                  "nodeType": "YulIf",
                  "src": "284:52:54"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "345:36:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "371:9:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "358:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "358:23:54"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "349:5:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "427:5:54"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_ERC20Basic",
                      "nodeType": "YulIdentifier",
                      "src": "390:36:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "390:43:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "390:43:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "442:15:54",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "452:5:54"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "442:6:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ERC20Basic_$4899",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "240:9:54",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "251:7:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "263:6:54",
                "type": ""
              }
            ],
            "src": "185:278:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "538:189:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "584:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "593:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "596:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "586:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "586:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "586:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "559:7:54"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "568:9:54"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "555:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "555:23:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "580:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "551:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "551:32:54"
                  },
                  "nodeType": "YulIf",
                  "src": "548:52:54"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "609:36:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "635:9:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "622:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "622:23:54"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "613:5:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "691:5:54"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_ERC20Basic",
                      "nodeType": "YulIdentifier",
                      "src": "654:36:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "654:43:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "654:43:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "706:15:54",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "716:5:54"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "706:6:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "504:9:54",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "515:7:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "527:6:54",
                "type": ""
              }
            ],
            "src": "468:259:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "833:125:54",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "843:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "855:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "866:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "851:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "851:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "843:4:54"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "885:9:54"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "900:6:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "908:42:54",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "896:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "896:55:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "878:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "878:74:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "878:74:54"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "802:9:54",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "813:6:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "824:4:54",
                "type": ""
              }
            ],
            "src": "732:226:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1067:376:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1113:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1122:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1125:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1115:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1115:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1115:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1088:7:54"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1097:9:54"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1084:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1084:23:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1109:2:54",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1080:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1080:32:54"
                  },
                  "nodeType": "YulIf",
                  "src": "1077:52:54"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1138:36:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1164:9:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1151:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1151:23:54"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1142:5:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1220:5:54"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_ERC20Basic",
                      "nodeType": "YulIdentifier",
                      "src": "1183:36:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1183:43:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1183:43:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1235:15:54",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1245:5:54"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1235:6:54"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1259:47:54",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1291:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1302:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1287:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1287:18:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1274:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1274:32:54"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "1263:7:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "1352:7:54"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_ERC20Basic",
                      "nodeType": "YulIdentifier",
                      "src": "1315:36:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1315:45:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1315:45:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1369:17:54",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "1379:7:54"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1369:6:54"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1395:42:54",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1422:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1433:2:54",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1418:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1418:18:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1405:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1405:32:54"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1395:6:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1017:9:54",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1028:7:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1040:6:54",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1048:6:54",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1056:6:54",
                "type": ""
              }
            ],
            "src": "963:480:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1543:92:54",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1553:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1565:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1576:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1561:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1561:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1553:4:54"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1595:9:54"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1620:6:54"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1613:6:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1613:14:54"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1606:6:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1606:22:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1588:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1588:41:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1588:41:54"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1512:9:54",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1523:6:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1534:4:54",
                "type": ""
              }
            ],
            "src": "1448:187:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1763:683:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1809:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1818:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1821:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1811:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1811:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1811:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1784:7:54"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1793:9:54"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1780:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1780:23:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1805:2:54",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1776:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1776:32:54"
                  },
                  "nodeType": "YulIf",
                  "src": "1773:52:54"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1834:36:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1860:9:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1847:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1847:23:54"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1838:5:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1916:5:54"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_ERC20Basic",
                      "nodeType": "YulIdentifier",
                      "src": "1879:36:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1879:43:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1879:43:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1931:15:54",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1941:5:54"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1931:6:54"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1955:42:54",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1982:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1993:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1978:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1978:18:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1965:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1965:32:54"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1955:6:54"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2006:46:54",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2037:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2048:2:54",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2033:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2033:18:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2020:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2020:32:54"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "2010:6:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2061:28:54",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2071:18:54",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2065:2:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2116:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2125:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2128:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2118:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2118:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2118:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2104:6:54"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2112:2:54"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2101:2:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2101:14:54"
                  },
                  "nodeType": "YulIf",
                  "src": "2098:34:54"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2141:32:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2155:9:54"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2166:6:54"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2151:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2151:22:54"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "2145:2:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2221:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2230:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2233:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2223:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2223:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2223:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "2200:2:54"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2204:4:54",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2196:3:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2196:13:54"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2211:7:54"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2192:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2192:27:54"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2185:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2185:35:54"
                  },
                  "nodeType": "YulIf",
                  "src": "2182:55:54"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2246:30:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "2273:2:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2260:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2260:16:54"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2250:6:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2303:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2312:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2315:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2305:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2305:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2305:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2291:6:54"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2299:2:54"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2288:2:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2288:14:54"
                  },
                  "nodeType": "YulIf",
                  "src": "2285:34:54"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2369:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2378:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2381:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2371:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2371:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2371:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "2342:2:54"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "2346:6:54"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2338:3:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2338:15:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2355:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2334:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2334:24:54"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2360:7:54"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2331:2:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2331:37:54"
                  },
                  "nodeType": "YulIf",
                  "src": "2328:57:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2394:21:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "2408:2:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2412:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2404:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2404:11:54"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2394:6:54"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2424:16:54",
                  "value": {
                    "name": "length",
                    "nodeType": "YulIdentifier",
                    "src": "2434:6:54"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "2424:6:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1705:9:54",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1716:7:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1728:6:54",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1736:6:54",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1744:6:54",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1752:6:54",
                "type": ""
              }
            ],
            "src": "1640:806:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2532:103:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2578:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2587:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2590:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2580:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2580:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2580:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2553:7:54"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2562:9:54"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2549:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2549:23:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2574:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2545:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2545:32:54"
                  },
                  "nodeType": "YulIf",
                  "src": "2542:52:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2603:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2619:9:54"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2613:5:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2613:16:54"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2603:6:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2498:9:54",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2509:7:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2521:6:54",
                "type": ""
              }
            ],
            "src": "2451:184:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2769:168:54",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2779:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2791:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2802:2:54",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2787:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2787:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2779:4:54"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2821:9:54"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2836:6:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2844:42:54",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2832:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2832:55:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2814:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2814:74:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2814:74:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2908:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2919:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2904:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2904:18:54"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2924:6:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2897:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2897:34:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2897:34:54"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2730:9:54",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2741:6:54",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2749:6:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2760:4:54",
                "type": ""
              }
            ],
            "src": "2640:297:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3020:199:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3066:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3075:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3078:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3068:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3068:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3068:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3041:7:54"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3050:9:54"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3037:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3037:23:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3062:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3033:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3033:32:54"
                  },
                  "nodeType": "YulIf",
                  "src": "3030:52:54"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3091:29:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3110:9:54"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3104:5:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3104:16:54"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3095:5:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3173:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3182:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3185:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3175:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3175:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3175:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3142:5:54"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3163:5:54"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3156:6:54"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3156:13:54"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3149:6:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3149:21:54"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3139:2:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3139:32:54"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3132:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3132:40:54"
                  },
                  "nodeType": "YulIf",
                  "src": "3129:60:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3198:15:54",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3208:5:54"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3198:6:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2986:9:54",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2997:7:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3009:6:54",
                "type": ""
              }
            ],
            "src": "2942:277:54"
          }
        ]
      },
      "contents": "{\n    { }\n    function validator_revert_contract_ERC20Basic(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_ERC20Basic_$4899(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_ERC20Basic(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_ERC20Basic(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_ERC20Basic(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_contract_ERC20Basic(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_ERC20Basic(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value2 := add(_2, 32)\n        value3 := length\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
      "id": 54,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "919:772:12:-:0;;;1143:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;588:5:47;:18;;-1:-1:-1;;;;;;588:18:47;596:10;588:18;;;982:9:44;:14;974:23;;;;;;1178:5:12;:14;;;;;-1:-1:-1;;;1178:14:12;-1:-1:-1;;;;1178:14:12;;;;;;;;;919:772;;14:277:54;81:6;134:2;122:9;113:7;109:23;105:32;102:52;;;150:1;147;140:12;102:52;182:9;176:16;235:5;228:13;221:21;214:5;211:32;201:60;;257:1;254;247:12;201:60;280:5;14:277;-1:-1:-1;;;14:277:54:o;:::-;919:772:12;;;;;;",
  "deployedSourceMap": "919:772:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;629:161:41;;;;;;:::i;:::-;;:::i;512:166:43:-;;;;;;:::i;:::-;;:::i;836:164:42:-;;;:::i;1022:111:47:-;;;:::i;269:20::-;;;;;-1:-1:-1;;;;;269:20:47;;;;;;-1:-1:-1;;;;;896:55:54;;;878:74;;866:2;851:18;269:20:47;;;;;;;;1213:100:44;;;:::i;1299::12:-;;;;;;:::i;:::-;-1:-1:-1;;1387:5:12;;;;;;;;1299:100;-1:-1:-1;1299:100:12;;;;1613:14:54;;1606:22;1588:41;;1576:2;1561:18;1299:100:12;1448:187:54;667:169:45;;;;;;:::i;:::-;823:8;;;291:27:42;;;;;-1:-1:-1;;;;;291:27:42;;;1556:133:12;;;;;;:::i;:::-;;:::i;629:161:41:-;740:5:47;;-1:-1:-1;;;;;740:5:47;726:10;:19;718:28;;;;;;713:31:41::1;::::0;;;;738:4:::1;713:31;::::0;::::1;878:74:54::0;695:15:41::1;::::0;-1:-1:-1;;;;;713:16:41;::::1;::::0;::::1;::::0;851:18:54;;713:31:41::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;770:5;::::0;695:49;;-1:-1:-1;750:35:41::1;::::0;-1:-1:-1;;;;;750:19:41;;::::1;::::0;770:5:::1;695:49:::0;750:19:::1;:35::i;:::-;689:101;629:161:::0;:::o;512:166:43:-;740:5:47;;-1:-1:-1;;;;;740:5:47;726:10;:19;718:28;;;;;;585:20:43::1;667:5:::0;636:37:::1;::::0;;;;-1:-1:-1;;;;;667:5:43;;::::1;636:37;::::0;::::1;878:74:54::0;616:13:43;;636:30;::::1;::::0;::::1;::::0;851:18:54;;636:37:43::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;579:99;512:166:::0;:::o;836:164:42:-;471:12;;-1:-1:-1;;;;;471:12:42;457:10;:26;449:35;;;;;;925:12:::1;::::0;::::1;918:5:::0;;897:41:::1;::::0;-1:-1:-1;;;;;925:12:42;;::::1;::::0;918:5;;::::1;::::0;897:41:::1;::::0;::::1;952:12;::::0;;::::1;944:20:::0;;-1:-1:-1;;944:20:42;;::::1;-1:-1:-1::0;;;;;952:12:42;::::1;944:20;::::0;;;970:25:::1;::::0;;836:164::o;1022:111:47:-;740:5;;-1:-1:-1;;;;;740:5:47;726:10;:19;718:28;;;;;;1098:5:::1;::::0;;1079:25:::1;::::0;-1:-1:-1;;;;;1098:5:47;;::::1;::::0;1079:25:::1;::::0;::::1;1126:1;1110:18:::0;;-1:-1:-1;;1110:18:47::1;::::0;;1022:111::o;1213:100:44:-;740:5:47;;-1:-1:-1;;;;;740:5:47;726:10;:19;718:28;;;;;;1270:5:44::1;::::0;;1262:46:::1;::::0;-1:-1:-1;;;;;1270:5:44;;::::1;::::0;1286:21:::1;1262:46:::0;::::1;;;::::0;1286:21;;1262:46;1270:5;1262:46;1286:21;1270:5;1262:46;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;1213:100::o:0;1556:133:12:-;1645:37;1673:8;1645:27;:37::i;376:149:53:-;491:28;;;;;-1:-1:-1;;;;;2832:55:54;;;491:28:53;;;2814:74:54;2904:18;;;2897:34;;;491:15:53;;;;;2787:18:54;;491:28:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;483:37;;;;;;376:149;;;:::o;639:113:42:-;740:5:47;;-1:-1:-1;;;;;740:5:47;726:10;:19;718:28;;;;;;724:12:42::1;:23:::0;;-1:-1:-1;;724:23:42::1;-1:-1:-1::0;;;;;724:23:42;;;::::1;::::0;;;::::1;::::0;;639:113::o;14:166:54:-;-1:-1:-1;;;;;105:5:54;101:54;94:5;91:65;81:93;;170:1;167;160:12;185:278;263:6;316:2;304:9;295:7;291:23;287:32;284:52;;;332:1;329;322:12;284:52;371:9;358:23;390:43;427:5;390:43;:::i;:::-;452:5;185:278;-1:-1:-1;;;185:278:54:o;963:480::-;1040:6;1048;1056;1109:2;1097:9;1088:7;1084:23;1080:32;1077:52;;;1125:1;1122;1115:12;1077:52;1164:9;1151:23;1183:43;1220:5;1183:43;:::i;:::-;1245:5;-1:-1:-1;1302:2:54;1287:18;;1274:32;1315:45;1274:32;1315:45;:::i;:::-;963:480;;1379:7;;-1:-1:-1;;;1433:2:54;1418:18;;;;1405:32;;963:480::o;1640:806::-;1728:6;1736;1744;1752;1805:2;1793:9;1784:7;1780:23;1776:32;1773:52;;;1821:1;1818;1811:12;1773:52;1860:9;1847:23;1879:43;1916:5;1879:43;:::i;:::-;1941:5;-1:-1:-1;1993:2:54;1978:18;;1965:32;;-1:-1:-1;2048:2:54;2033:18;;2020:32;2071:18;2101:14;;;2098:34;;;2128:1;2125;2118:12;2098:34;2166:6;2155:9;2151:22;2141:32;;2211:7;2204:4;2200:2;2196:13;2192:27;2182:55;;2233:1;2230;2223:12;2182:55;2273:2;2260:16;2299:2;2291:6;2288:14;2285:34;;;2315:1;2312;2305:12;2285:34;2360:7;2355:2;2346:6;2342:2;2338:15;2334:24;2331:37;2328:57;;;2381:1;2378;2371:12;2328:57;1640:806;;;;-1:-1:-1;;2412:2:54;2404:11;;-1:-1:-1;;;1640:806:54:o;2451:184::-;2521:6;2574:2;2562:9;2553:7;2549:23;2545:32;2542:52;;;2590:1;2587;2580:12;2542:52;-1:-1:-1;2613:16:54;;2451:184;-1:-1:-1;2451:184:54:o;2942:277::-;3009:6;3062:2;3050:9;3041:7;3037:23;3033:32;3030:52;;;3078:1;3075;3068:12;3030:52;3110:9;3104:16;3163:5;3156:13;3149:21;3142:5;3139:32;3129:60;;3185:1;3182;3175:12",
  "source": "/* SPDX-License-Identifier: apache-2.0 */\n/**\n * Copyright 2019 Monerium ehf.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npragma solidity 0.8.11;\n\nimport \"./ownership/Claimable.sol\";\nimport \"./ownership/NoOwner.sol\";\nimport \"./ownership/CanReclaimToken.sol\";\nimport \"./IValidator.sol\";\n\n/**\n * @title ConstantValidator\n * @dev Constantly validates token transfers based on the constructor value.\n */\ncontract ConstantValidator is IValidator, Claimable, CanReclaimToken, NoOwner {\n\n    bool internal valid;\n\n    /**\n     * @dev Contract constructor.\n     * @param valid_ Always return this value when validating.\n     */\n    constructor(bool valid_) {\n        valid = valid_;\n    }\n\n    /**\n     * @dev Validates token transfer.\n     * Implements IValidator interface.\n     */\n    function validate(address, address, uint) external view returns (bool) {\n        return valid;\n    }\n\n    /**\n     * @dev Explicit override of transferOwnership from Claimable and Ownable\n     * @param newOwner Address to transfer ownership to.\n     */\n    function transferOwnership(address newOwner) public override(Claimable, Ownable) {\n      Claimable.transferOwnership(newOwner);\n    }\n}\n",
  "sourcePath": "/Users/kristen/work/monerium/smart-contracts-private/contracts/ConstantValidator.sol",
  "ast": {
    "absolutePath": "project:/contracts/ConstantValidator.sol",
    "exportedSymbols": {
      "CanReclaimToken": [
        4325
      ],
      "Claimable": [
        4383
      ],
      "ConstantValidator": [
        1594
      ],
      "ERC20Basic": [
        4899
      ],
      "HasNoContracts": [
        4412
      ],
      "HasNoEther": [
        4455
      ],
      "HasNoTokens": [
        4482
      ],
      "IValidator": [
        2013
      ],
      "NoOwner": [
        4495
      ],
      "Ownable": [
        4589
      ],
      "SafeERC20": [
        4923
      ]
    },
    "id": 1595,
    "license": "apache-2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1536,
        "literals": [
          "solidity",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "641:23:12"
      },
      {
        "absolutePath": "project:/contracts/ownership/Claimable.sol",
        "file": "./ownership/Claimable.sol",
        "id": 1537,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1595,
        "sourceUnit": 4384,
        "src": "666:35:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ownership/NoOwner.sol",
        "file": "./ownership/NoOwner.sol",
        "id": 1538,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1595,
        "sourceUnit": 4496,
        "src": "702:33:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ownership/CanReclaimToken.sol",
        "file": "./ownership/CanReclaimToken.sol",
        "id": 1539,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1595,
        "sourceUnit": 4326,
        "src": "736:41:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/IValidator.sol",
        "file": "./IValidator.sol",
        "id": 1540,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1595,
        "sourceUnit": 2014,
        "src": "778:26:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1542,
              "name": "IValidator",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2013,
              "src": "949:10:12"
            },
            "id": 1543,
            "nodeType": "InheritanceSpecifier",
            "src": "949:10:12"
          },
          {
            "baseName": {
              "id": 1544,
              "name": "Claimable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4383,
              "src": "961:9:12"
            },
            "id": 1545,
            "nodeType": "InheritanceSpecifier",
            "src": "961:9:12"
          },
          {
            "baseName": {
              "id": 1546,
              "name": "CanReclaimToken",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4325,
              "src": "972:15:12"
            },
            "id": 1547,
            "nodeType": "InheritanceSpecifier",
            "src": "972:15:12"
          },
          {
            "baseName": {
              "id": 1548,
              "name": "NoOwner",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4495,
              "src": "989:7:12"
            },
            "id": 1549,
            "nodeType": "InheritanceSpecifier",
            "src": "989:7:12"
          }
        ],
        "canonicalName": "ConstantValidator",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1541,
          "nodeType": "StructuredDocumentation",
          "src": "806:112:12",
          "text": " @title ConstantValidator\n @dev Constantly validates token transfers based on the constructor value."
        },
        "fullyImplemented": true,
        "id": 1594,
        "linearizedBaseContracts": [
          1594,
          4495,
          4412,
          4482,
          4325,
          4455,
          4383,
          4589,
          2013
        ],
        "name": "ConstantValidator",
        "nameLocation": "928:17:12",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1551,
            "mutability": "mutable",
            "name": "valid",
            "nameLocation": "1018:5:12",
            "nodeType": "VariableDeclaration",
            "scope": 1594,
            "src": "1004:19:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1550,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1004:4:12",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1561,
              "nodeType": "Block",
              "src": "1168:31:12",
              "statements": [
                {
                  "expression": {
                    "id": 1559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1557,
                      "name": "valid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1551,
                      "src": "1178:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1558,
                      "name": "valid_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1554,
                      "src": "1186:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1178:14:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1560,
                  "nodeType": "ExpressionStatement",
                  "src": "1178:14:12"
                }
              ]
            },
            "documentation": {
              "id": 1552,
              "nodeType": "StructuredDocumentation",
              "src": "1030:108:12",
              "text": " @dev Contract constructor.\n @param valid_ Always return this value when validating."
            },
            "id": 1562,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1555,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1554,
                  "mutability": "mutable",
                  "name": "valid_",
                  "nameLocation": "1160:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1562,
                  "src": "1155:11:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1553,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1155:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1154:13:12"
            },
            "returnParameters": {
              "id": 1556,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1168:0:12"
            },
            "scope": 1594,
            "src": "1143:56:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2012
            ],
            "body": {
              "id": 1576,
              "nodeType": "Block",
              "src": "1370:29:12",
              "statements": [
                {
                  "expression": {
                    "id": 1574,
                    "name": "valid",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1551,
                    "src": "1387:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1573,
                  "id": 1575,
                  "nodeType": "Return",
                  "src": "1380:12:12"
                }
              ]
            },
            "documentation": {
              "id": 1563,
              "nodeType": "StructuredDocumentation",
              "src": "1205:89:12",
              "text": " @dev Validates token transfer.\n Implements IValidator interface."
            },
            "functionSelector": "aa3ad4e4",
            "id": 1577,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validate",
            "nameLocation": "1308:8:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1570,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1565,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1577,
                  "src": "1317:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1564,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1317:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1567,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1577,
                  "src": "1326:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1566,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1326:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1569,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1577,
                  "src": "1335:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1568,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1335:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1316:24:12"
            },
            "returnParameters": {
              "id": 1573,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1572,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1577,
                  "src": "1364:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1571,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1364:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1363:6:12"
            },
            "scope": 1594,
            "src": "1299:100:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4359,
              4563
            ],
            "body": {
              "id": 1592,
              "nodeType": "Block",
              "src": "1637:52:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1589,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1580,
                        "src": "1673:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1586,
                        "name": "Claimable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4383,
                        "src": "1645:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Claimable_$4383_$",
                          "typeString": "type(contract Claimable)"
                        }
                      },
                      "id": 1588,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4359,
                      "src": "1645:27:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1645:37:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1591,
                  "nodeType": "ExpressionStatement",
                  "src": "1645:37:12"
                }
              ]
            },
            "documentation": {
              "id": 1578,
              "nodeType": "StructuredDocumentation",
              "src": "1405:146:12",
              "text": " @dev Explicit override of transferOwnership from Claimable and Ownable\n @param newOwner Address to transfer ownership to."
            },
            "functionSelector": "f2fde38b",
            "id": 1593,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferOwnership",
            "nameLocation": "1565:17:12",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1584,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 1582,
                  "name": "Claimable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4383,
                  "src": "1617:9:12"
                },
                {
                  "id": 1583,
                  "name": "Ownable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4589,
                  "src": "1628:7:12"
                }
              ],
              "src": "1608:28:12"
            },
            "parameters": {
              "id": 1581,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1580,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "1591:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1593,
                  "src": "1583:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1579,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1583:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1582:18:12"
            },
            "returnParameters": {
              "id": 1585,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1637:0:12"
            },
            "scope": 1594,
            "src": "1556:133:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1595,
        "src": "919:772:12",
        "usedErrors": []
      }
    ],
    "src": "641:1051:12"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/ConstantValidator.sol",
    "exportedSymbols": {
      "CanReclaimToken": [
        4325
      ],
      "Claimable": [
        4383
      ],
      "ConstantValidator": [
        1594
      ],
      "ERC20Basic": [
        4899
      ],
      "HasNoContracts": [
        4412
      ],
      "HasNoEther": [
        4455
      ],
      "HasNoTokens": [
        4482
      ],
      "IValidator": [
        2013
      ],
      "NoOwner": [
        4495
      ],
      "Ownable": [
        4589
      ],
      "SafeERC20": [
        4923
      ]
    },
    "id": 1595,
    "license": "apache-2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1536,
        "literals": [
          "solidity",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "641:23:12"
      },
      {
        "absolutePath": "project:/contracts/ownership/Claimable.sol",
        "file": "./ownership/Claimable.sol",
        "id": 1537,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1595,
        "sourceUnit": 4384,
        "src": "666:35:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ownership/NoOwner.sol",
        "file": "./ownership/NoOwner.sol",
        "id": 1538,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1595,
        "sourceUnit": 4496,
        "src": "702:33:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ownership/CanReclaimToken.sol",
        "file": "./ownership/CanReclaimToken.sol",
        "id": 1539,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1595,
        "sourceUnit": 4326,
        "src": "736:41:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/IValidator.sol",
        "file": "./IValidator.sol",
        "id": 1540,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1595,
        "sourceUnit": 2014,
        "src": "778:26:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1542,
              "name": "IValidator",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2013,
              "src": "949:10:12"
            },
            "id": 1543,
            "nodeType": "InheritanceSpecifier",
            "src": "949:10:12"
          },
          {
            "baseName": {
              "id": 1544,
              "name": "Claimable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4383,
              "src": "961:9:12"
            },
            "id": 1545,
            "nodeType": "InheritanceSpecifier",
            "src": "961:9:12"
          },
          {
            "baseName": {
              "id": 1546,
              "name": "CanReclaimToken",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4325,
              "src": "972:15:12"
            },
            "id": 1547,
            "nodeType": "InheritanceSpecifier",
            "src": "972:15:12"
          },
          {
            "baseName": {
              "id": 1548,
              "name": "NoOwner",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4495,
              "src": "989:7:12"
            },
            "id": 1549,
            "nodeType": "InheritanceSpecifier",
            "src": "989:7:12"
          }
        ],
        "canonicalName": "ConstantValidator",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1541,
          "nodeType": "StructuredDocumentation",
          "src": "806:112:12",
          "text": " @title ConstantValidator\n @dev Constantly validates token transfers based on the constructor value."
        },
        "fullyImplemented": true,
        "id": 1594,
        "linearizedBaseContracts": [
          1594,
          4495,
          4412,
          4482,
          4325,
          4455,
          4383,
          4589,
          2013
        ],
        "name": "ConstantValidator",
        "nameLocation": "928:17:12",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1551,
            "mutability": "mutable",
            "name": "valid",
            "nameLocation": "1018:5:12",
            "nodeType": "VariableDeclaration",
            "scope": 1594,
            "src": "1004:19:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1550,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1004:4:12",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1561,
              "nodeType": "Block",
              "src": "1168:31:12",
              "statements": [
                {
                  "expression": {
                    "id": 1559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1557,
                      "name": "valid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1551,
                      "src": "1178:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1558,
                      "name": "valid_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1554,
                      "src": "1186:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1178:14:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1560,
                  "nodeType": "ExpressionStatement",
                  "src": "1178:14:12"
                }
              ]
            },
            "documentation": {
              "id": 1552,
              "nodeType": "StructuredDocumentation",
              "src": "1030:108:12",
              "text": " @dev Contract constructor.\n @param valid_ Always return this value when validating."
            },
            "id": 1562,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1555,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1554,
                  "mutability": "mutable",
                  "name": "valid_",
                  "nameLocation": "1160:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1562,
                  "src": "1155:11:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1553,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1155:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1154:13:12"
            },
            "returnParameters": {
              "id": 1556,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1168:0:12"
            },
            "scope": 1594,
            "src": "1143:56:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2012
            ],
            "body": {
              "id": 1576,
              "nodeType": "Block",
              "src": "1370:29:12",
              "statements": [
                {
                  "expression": {
                    "id": 1574,
                    "name": "valid",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1551,
                    "src": "1387:5:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1573,
                  "id": 1575,
                  "nodeType": "Return",
                  "src": "1380:12:12"
                }
              ]
            },
            "documentation": {
              "id": 1563,
              "nodeType": "StructuredDocumentation",
              "src": "1205:89:12",
              "text": " @dev Validates token transfer.\n Implements IValidator interface."
            },
            "functionSelector": "aa3ad4e4",
            "id": 1577,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validate",
            "nameLocation": "1308:8:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1570,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1565,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1577,
                  "src": "1317:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1564,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1317:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1567,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1577,
                  "src": "1326:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1566,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1326:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1569,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1577,
                  "src": "1335:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1568,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1335:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1316:24:12"
            },
            "returnParameters": {
              "id": 1573,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1572,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1577,
                  "src": "1364:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1571,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1364:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1363:6:12"
            },
            "scope": 1594,
            "src": "1299:100:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4359,
              4563
            ],
            "body": {
              "id": 1592,
              "nodeType": "Block",
              "src": "1637:52:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1589,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1580,
                        "src": "1673:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1586,
                        "name": "Claimable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4383,
                        "src": "1645:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Claimable_$4383_$",
                          "typeString": "type(contract Claimable)"
                        }
                      },
                      "id": 1588,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4359,
                      "src": "1645:27:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1645:37:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1591,
                  "nodeType": "ExpressionStatement",
                  "src": "1645:37:12"
                }
              ]
            },
            "documentation": {
              "id": 1578,
              "nodeType": "StructuredDocumentation",
              "src": "1405:146:12",
              "text": " @dev Explicit override of transferOwnership from Claimable and Ownable\n @param newOwner Address to transfer ownership to."
            },
            "functionSelector": "f2fde38b",
            "id": 1593,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferOwnership",
            "nameLocation": "1565:17:12",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1584,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 1582,
                  "name": "Claimable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4383,
                  "src": "1617:9:12"
                },
                {
                  "id": 1583,
                  "name": "Ownable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4589,
                  "src": "1628:7:12"
                }
              ],
              "src": "1608:28:12"
            },
            "parameters": {
              "id": 1581,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1580,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "1591:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1593,
                  "src": "1583:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1579,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1583:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1582:18:12"
            },
            "returnParameters": {
              "id": 1585,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1637:0:12"
            },
            "scope": 1594,
            "src": "1556:133:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1595,
        "src": "919:772:12",
        "usedErrors": []
      }
    ],
    "src": "641:1051:12"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-04-28T11:58:59.837Z",
  "networkType": "ethereum",
  "devdoc": {
    "details": "Constantly validates token transfers based on the constructor value.",
    "kind": "dev",
    "methods": {
      "claimOwnership()": {
        "details": "Allows the pendingOwner address to finalize the transfer."
      },
      "constructor": {
        "details": "Contract constructor.",
        "params": {
          "valid_": "Always return this value when validating."
        }
      },
      "reclaimContract(address)": {
        "details": "Reclaim ownership of Ownable contracts",
        "params": {
          "_contractAddr": "The address of the Ownable to be reclaimed."
        }
      },
      "reclaimEther()": {
        "details": "Transfer all Ether held by the contract to the owner."
      },
      "reclaimToken(address)": {
        "details": "Reclaim all ERC20Basic compatible tokens",
        "params": {
          "_token": "ERC20Basic The address of the token contract"
        }
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "tokenFallback(address,uint256,bytes)": {
        "details": "Reject all ERC223 compatible tokens",
        "params": {
          "_data": "Bytes The data passed from the caller.",
          "_from": "address The address that is transferring the tokens",
          "_value": "uint256 the amount of the specified token"
        }
      },
      "transferOwnership(address)": {
        "details": "Explicit override of transferOwnership from Claimable and Ownable",
        "params": {
          "newOwner": "Address to transfer ownership to."
        }
      },
      "validate(address,address,uint256)": {
        "details": "Validates token transfer. Implements IValidator interface."
      }
    },
    "title": "ConstantValidator",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    },
    "version": 1
  }
}