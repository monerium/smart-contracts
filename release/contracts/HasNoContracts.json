{
  "contractName": "HasNoContracts",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contractAddr",
          "type": "address"
        }
      ],
      "name": "reclaimContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractAddr\",\"type\":\"address\"}],\"name\":\"reclaimContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Remco Bloemen <remco@2\\u03c0.com>\",\"details\":\"Should contracts (anything Ownable) end up being owned by this contract, it allows the owner of this contract to reclaim ownership of the contracts.\",\"kind\":\"dev\",\"methods\":{\"reclaimContract(address)\":{\"details\":\"Reclaim ownership of Ownable contracts\",\"params\":{\"_contractAddr\":\"The address of the Ownable to be reclaimed.\"}},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"_newOwner\":\"The address to transfer ownership to.\"}}},\"title\":\"Contracts that should not own Contracts\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/ownership/HasNoContracts.sol\":\"HasNoContracts\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"project:/contracts/ownership/HasNoContracts.sol\":{\"keccak256\":\"0x4b56f82527c084cec1ded0d6ce4161615d7e9448b49c904278647701afb89015\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e41dc4c6173f707be7020e600622caaf6461851917b2b1a989d41c74c620e49\",\"dweb:/ipfs/QmR286HLknD5ozrEJcy5tFQunwwe6SBh8tLkr97hPnzu7N\"]},\"project:/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x0041c7f55b3f5b57b5fd6d3eec14573596c5f0d59ce8802e08dae01ed6ff7603\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21935211244e684ccbbd0858a4e2194a41c1b3bb36760bbbe4be4b11a63dd4cb\",\"dweb:/ipfs/Qmbw5C8ZJgA4jRPVP3rqohQb7f72YtUGgBg4eMqX3u56Rv\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916331790556102b4806100326000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632aed7f3f14610051578063715018a6146100665780638da5cb5b1461006e578063f2fde38b1461009d575b600080fd5b61006461005f36600461024e565b6100b0565b005b610064610144565b600054610081906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6100646100ab36600461024e565b6101b0565b6000546001600160a01b031633146100c757600080fd5b6000546040517ff2fde38b0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152829182169063f2fde38b90602401600060405180830381600087803b15801561012857600080fd5b505af115801561013c573d6000803e3d6000fd5b505050505050565b6000546001600160a01b0316331461015b57600080fd5b600080546040516001600160a01b03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6000546001600160a01b031633146101c757600080fd5b6101d0816101d3565b50565b6001600160a01b0381166101e657600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b60006020828403121561026057600080fd5b81356001600160a01b038116811461027757600080fd5b939250505056fea264697066735822122069f4ee54ec47416276cdcdfedc57420266ddc3b08ce37c61888543d204e97a7964736f6c634300080b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80632aed7f3f14610051578063715018a6146100665780638da5cb5b1461006e578063f2fde38b1461009d575b600080fd5b61006461005f36600461024e565b6100b0565b005b610064610144565b600054610081906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6100646100ab36600461024e565b6101b0565b6000546001600160a01b031633146100c757600080fd5b6000546040517ff2fde38b0000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152829182169063f2fde38b90602401600060405180830381600087803b15801561012857600080fd5b505af115801561013c573d6000803e3d6000fd5b505050505050565b6000546001600160a01b0316331461015b57600080fd5b600080546040516001600160a01b03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6000546001600160a01b031633146101c757600080fd5b6101d0816101d3565b50565b6001600160a01b0381166101e657600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b60006020828403121561026057600080fd5b81356001600160a01b038116811461027757600080fd5b939250505056fea264697066735822122069f4ee54ec47416276cdcdfedc57420266ddc3b08ce37c61888543d204e97a7964736f6c634300080b0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:556:54",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:54",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:239:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:54"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:54"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:54"
                  },
                  "nodeType": "YulIf",
                  "src": "94:52:54"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "155:36:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "181:9:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "168:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "168:23:54"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "159:5:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "277:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "286:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "289:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "279:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "279:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "279:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "213:5:54"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "224:5:54"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "231:42:54",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "220:3:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "220:54:54"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "210:2:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "210:65:54"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "203:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "203:73:54"
                  },
                  "nodeType": "YulIf",
                  "src": "200:93:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "302:15:54",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "312:5:54"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "302:6:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:54",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:54",
                "type": ""
              }
            ],
            "src": "14:309:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "429:125:54",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "439:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "451:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "462:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "447:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "447:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "439:4:54"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "481:9:54"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "496:6:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "504:42:54",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "492:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "492:55:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "474:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "474:74:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "474:74:54"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "398:9:54",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "409:6:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "420:4:54",
                "type": ""
              }
            ],
            "src": "328:226:54"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n}",
      "id": 54,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "341:339:43:-:0;;;;;;;;;;;;-1:-1:-1;588:5:47;:18;;-1:-1:-1;;;;;;588:18:47;596:10;588:18;;;341:339:43;;;;;;",
  "deployedSourceMap": "341:339:43:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;512:166;;;;;;:::i;:::-;;:::i;:::-;;1022:111:47;;;:::i;269:20::-;;;;;-1:-1:-1;;;;;269:20:47;;;;;;-1:-1:-1;;;;;492:55:54;;;474:74;;462:2;447:18;269:20:47;;;;;;;1295:111;;;;;;:::i;:::-;;:::i;512:166:43:-;740:5:47;;-1:-1:-1;;;;;740:5:47;726:10;:19;718:28;;;;;;585:20:43::1;667:5:::0;636:37:::1;::::0;;;;-1:-1:-1;;;;;667:5:43;;::::1;636:37;::::0;::::1;474:74:54::0;616:13:43;;636:30;::::1;::::0;::::1;::::0;447:18:54;;636:37:43::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;579:99;512:166:::0;:::o;1022:111:47:-;740:5;;-1:-1:-1;;;;;740:5:47;726:10;:19;718:28;;;;;;1098:5:::1;::::0;;1079:25:::1;::::0;-1:-1:-1;;;;;1098:5:47;;::::1;::::0;1079:25:::1;::::0;::::1;1126:1;1110:18:::0;;-1:-1:-1;;1110:18:47::1;::::0;;1022:111::o;1295:::-;740:5;;-1:-1:-1;;;;;740:5:47;726:10;:19;718:28;;;;;;1372:29:::1;1391:9;1372:18;:29::i;:::-;1295:111:::0;:::o;1541:171::-;-1:-1:-1;;;;;1611:23:47;;1603:32;;;;;;1667:5;;;1646:38;;-1:-1:-1;;;;;1646:38:47;;;;1667:5;;;1646:38;;;1690:5;:17;;-1:-1:-1;;1690:17:47;-1:-1:-1;;;;;1690:17:47;;;;;;;;;;1541:171::o;14:309:54:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;181:9;168:23;-1:-1:-1;;;;;224:5:54;220:54;213:5;210:65;200:93;;289:1;286;279:12;200:93;312:5;14:309;-1:-1:-1;;;14:309:54:o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./Ownable.sol\";\n\n/**\n * @title Contracts that should not own Contracts\n * @author Remco Bloemen <remco@2π.com>\n * @dev Should contracts (anything Ownable) end up being owned by this contract, it allows the owner\n * of this contract to reclaim ownership of the contracts.\n */\ncontract HasNoContracts is Ownable {\n\n  /**\n   * @dev Reclaim ownership of Ownable contracts\n   * @param _contractAddr The address of the Ownable to be reclaimed.\n   */\n  function reclaimContract(address _contractAddr) external onlyOwner {\n    Ownable contractInst = Ownable(_contractAddr);\n    contractInst.transferOwnership(owner);\n  }\n}\n",
  "sourcePath": "/Users/kristen/work/monerium/smart-contracts-private/contracts/ownership/HasNoContracts.sol",
  "ast": {
    "absolutePath": "project:/contracts/ownership/HasNoContracts.sol",
    "exportedSymbols": {
      "HasNoContracts": [
        4412
      ],
      "Ownable": [
        4589
      ]
    },
    "id": 4413,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4385,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:43"
      },
      {
        "absolutePath": "project:/contracts/ownership/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 4386,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4413,
        "sourceUnit": 4590,
        "src": "57:23:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4388,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4589,
              "src": "368:7:43"
            },
            "id": 4389,
            "nodeType": "InheritanceSpecifier",
            "src": "368:7:43"
          }
        ],
        "canonicalName": "HasNoContracts",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 4387,
          "nodeType": "StructuredDocumentation",
          "src": "82:258:43",
          "text": " @title Contracts that should not own Contracts\n @author Remco Bloemen <remco@2π.com>\n @dev Should contracts (anything Ownable) end up being owned by this contract, it allows the owner\n of this contract to reclaim ownership of the contracts."
        },
        "fullyImplemented": true,
        "id": 4412,
        "linearizedBaseContracts": [
          4412,
          4589
        ],
        "name": "HasNoContracts",
        "nameLocation": "350:14:43",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4410,
              "nodeType": "Block",
              "src": "579:99:43",
              "statements": [
                {
                  "assignments": [
                    4399
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4399,
                      "mutability": "mutable",
                      "name": "contractInst",
                      "nameLocation": "593:12:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 4410,
                      "src": "585:20:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Ownable_$4589",
                        "typeString": "contract Ownable"
                      },
                      "typeName": {
                        "id": 4398,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4397,
                          "name": "Ownable",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4589,
                          "src": "585:7:43"
                        },
                        "referencedDeclaration": 4589,
                        "src": "585:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Ownable_$4589",
                          "typeString": "contract Ownable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4403,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4401,
                        "name": "_contractAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4392,
                        "src": "616:13:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4400,
                      "name": "Ownable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4589,
                      "src": "608:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Ownable_$4589_$",
                        "typeString": "type(contract Ownable)"
                      }
                    },
                    "id": 4402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "608:22:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Ownable_$4589",
                      "typeString": "contract Ownable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "585:45:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4407,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4500,
                        "src": "667:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4404,
                        "name": "contractInst",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4399,
                        "src": "636:12:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Ownable_$4589",
                          "typeString": "contract Ownable"
                        }
                      },
                      "id": 4406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4563,
                      "src": "636:30:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 4408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "636:37:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4409,
                  "nodeType": "ExpressionStatement",
                  "src": "636:37:43"
                }
              ]
            },
            "documentation": {
              "id": 4390,
              "nodeType": "StructuredDocumentation",
              "src": "381:128:43",
              "text": " @dev Reclaim ownership of Ownable contracts\n @param _contractAddr The address of the Ownable to be reclaimed."
            },
            "functionSelector": "2aed7f3f",
            "id": 4411,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4395,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4394,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4532,
                  "src": "569:9:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "569:9:43"
              }
            ],
            "name": "reclaimContract",
            "nameLocation": "521:15:43",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4393,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4392,
                  "mutability": "mutable",
                  "name": "_contractAddr",
                  "nameLocation": "545:13:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 4411,
                  "src": "537:21:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4391,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "537:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "536:23:43"
            },
            "returnParameters": {
              "id": 4396,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "579:0:43"
            },
            "scope": 4412,
            "src": "512:166:43",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4413,
        "src": "341:339:43",
        "usedErrors": []
      }
    ],
    "src": "32:649:43"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/ownership/HasNoContracts.sol",
    "exportedSymbols": {
      "HasNoContracts": [
        4412
      ],
      "Ownable": [
        4589
      ]
    },
    "id": 4413,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4385,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:43"
      },
      {
        "absolutePath": "project:/contracts/ownership/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 4386,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4413,
        "sourceUnit": 4590,
        "src": "57:23:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4388,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4589,
              "src": "368:7:43"
            },
            "id": 4389,
            "nodeType": "InheritanceSpecifier",
            "src": "368:7:43"
          }
        ],
        "canonicalName": "HasNoContracts",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 4387,
          "nodeType": "StructuredDocumentation",
          "src": "82:258:43",
          "text": " @title Contracts that should not own Contracts\n @author Remco Bloemen <remco@2π.com>\n @dev Should contracts (anything Ownable) end up being owned by this contract, it allows the owner\n of this contract to reclaim ownership of the contracts."
        },
        "fullyImplemented": true,
        "id": 4412,
        "linearizedBaseContracts": [
          4412,
          4589
        ],
        "name": "HasNoContracts",
        "nameLocation": "350:14:43",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4410,
              "nodeType": "Block",
              "src": "579:99:43",
              "statements": [
                {
                  "assignments": [
                    4399
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4399,
                      "mutability": "mutable",
                      "name": "contractInst",
                      "nameLocation": "593:12:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 4410,
                      "src": "585:20:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Ownable_$4589",
                        "typeString": "contract Ownable"
                      },
                      "typeName": {
                        "id": 4398,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4397,
                          "name": "Ownable",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4589,
                          "src": "585:7:43"
                        },
                        "referencedDeclaration": 4589,
                        "src": "585:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Ownable_$4589",
                          "typeString": "contract Ownable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4403,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4401,
                        "name": "_contractAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4392,
                        "src": "616:13:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4400,
                      "name": "Ownable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4589,
                      "src": "608:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Ownable_$4589_$",
                        "typeString": "type(contract Ownable)"
                      }
                    },
                    "id": 4402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "608:22:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Ownable_$4589",
                      "typeString": "contract Ownable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "585:45:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4407,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4500,
                        "src": "667:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4404,
                        "name": "contractInst",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4399,
                        "src": "636:12:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Ownable_$4589",
                          "typeString": "contract Ownable"
                        }
                      },
                      "id": 4406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4563,
                      "src": "636:30:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 4408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "636:37:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4409,
                  "nodeType": "ExpressionStatement",
                  "src": "636:37:43"
                }
              ]
            },
            "documentation": {
              "id": 4390,
              "nodeType": "StructuredDocumentation",
              "src": "381:128:43",
              "text": " @dev Reclaim ownership of Ownable contracts\n @param _contractAddr The address of the Ownable to be reclaimed."
            },
            "functionSelector": "2aed7f3f",
            "id": 4411,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4395,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4394,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4532,
                  "src": "569:9:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "569:9:43"
              }
            ],
            "name": "reclaimContract",
            "nameLocation": "521:15:43",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4393,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4392,
                  "mutability": "mutable",
                  "name": "_contractAddr",
                  "nameLocation": "545:13:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 4411,
                  "src": "537:21:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4391,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "537:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "536:23:43"
            },
            "returnParameters": {
              "id": 4396,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "579:0:43"
            },
            "scope": 4412,
            "src": "512:166:43",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4413,
        "src": "341:339:43",
        "usedErrors": []
      }
    ],
    "src": "32:649:43"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-04-28T11:51:18.685Z",
  "devdoc": {
    "author": "Remco Bloemen <remco@2π.com>",
    "details": "Should contracts (anything Ownable) end up being owned by this contract, it allows the owner of this contract to reclaim ownership of the contracts.",
    "kind": "dev",
    "methods": {
      "reclaimContract(address)": {
        "details": "Reclaim ownership of Ownable contracts",
        "params": {
          "_contractAddr": "The address of the Ownable to be reclaimed."
        }
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "_newOwner": "The address to transfer ownership to."
        }
      }
    },
    "title": "Contracts that should not own Contracts",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    },
    "version": 1
  }
}