{
  "contractName": "HasNoTokens",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20Basic",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "reclaimToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "tokenFallback",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20Basic\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"reclaimToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"tokenFallback\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Remco Bloemen <remco@2\\u03c0.com>\",\"details\":\"This blocks incoming ERC223 tokens to prevent accidental loss of tokens. Should tokens (any ERC20Basic compatible) end up in the contract, it allows the owner to reclaim the tokens.\",\"kind\":\"dev\",\"methods\":{\"reclaimToken(address)\":{\"details\":\"Reclaim all ERC20Basic compatible tokens\",\"params\":{\"_token\":\"ERC20Basic The address of the token contract\"}},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"tokenFallback(address,uint256,bytes)\":{\"details\":\"Reject all ERC223 compatible tokens\",\"params\":{\"_data\":\"Bytes The data passed from the caller.\",\"_from\":\"address The address that is transferring the tokens\",\"_value\":\"uint256 the amount of the specified token\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"_newOwner\":\"The address to transfer ownership to.\"}}},\"title\":\"Contracts that should not own Tokens\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/ownership/HasNoTokens.sol\":\"HasNoTokens\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"project:/contracts/ownership/CanReclaimToken.sol\":{\"keccak256\":\"0x108e55b7d2d50484b7bf5699b1e0b27b29dcd633c8651ea8ca14e0f805f4d2f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bd1fbc3055642b7150e0616d5add5d19e292dee5bc4fa7a0e5865ee1dc4fe3\",\"dweb:/ipfs/Qme4kZKkizviTR3VjadY7rftSX9UV8pqJB7euV9udVVSVF\"]},\"project:/contracts/ownership/HasNoTokens.sol\":{\"keccak256\":\"0x25be2e066915369ead9f26824c8d22d9523c70cddee5369b092e49503c2ec088\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b52b009a1d8c7a465a81667d691b50301de052b969e05be7bd30a0c5f6846b82\",\"dweb:/ipfs/Qmcsk6qNq9Hy8WYagLQHFrvDYr5783sX4omUWkAeUSXtzy\"]},\"project:/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x0041c7f55b3f5b57b5fd6d3eec14573596c5f0d59ce8802e08dae01ed6ff7603\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21935211244e684ccbbd0858a4e2194a41c1b3bb36760bbbe4be4b11a63dd4cb\",\"dweb:/ipfs/Qmbw5C8ZJgA4jRPVP3rqohQb7f72YtUGgBg4eMqX3u56Rv\"]},\"project:/contracts/token/ERC20/ERC20Basic.sol\":{\"keccak256\":\"0x54484484f83afe433e6bc50c0003d99c5e877747a783581500a25df8ce7017dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85c97b9279681e06af93f38223117d3351acbe205ed8a47d33c650149ef09bb2\",\"dweb:/ipfs/QmYAcawJZ5tH9e6Syno9fejaaNdpzXbjtWQUhKZyA86g5d\"]},\"project:/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xa4c3829e43d20517869a6555f80977d4e582ae439b6b7c5013960fb05932f635\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d815f26b889c44a2f1703cb59ddf9a5e426447df50ce91e240bc68f046b99465\",\"dweb:/ipfs/QmUTTNoty755VqS2jvZra7HrumCnRNkLcPRihs7W3s4Vj2\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600080546001600160a01b0319163317905561046c806100326000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80638da5cb5b116100505780638da5cb5b14610089578063c0ee0b8a146100b8578063f2fde38b146100c657600080fd5b806317ffc3201461006c578063715018a614610081575b600080fd5b61007f61007a36600461034e565b6100d9565b005b61007f610195565b60005461009c906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b61007f610067366004610372565b61007f6100d436600461034e565b610201565b6000546001600160a01b031633146100f057600080fd5b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610150573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061017491906103fb565b600054909150610191906001600160a01b03848116911683610224565b5050565b6000546001600160a01b031633146101ac57600080fd5b600080546040516001600160a01b03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6000546001600160a01b0316331461021857600080fd5b610221816102be565b50565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af115801561028c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b09190610414565b6102b957600080fd5b505050565b6001600160a01b0381166102d157600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6001600160a01b038116811461022157600080fd5b60006020828403121561036057600080fd5b813561036b81610339565b9392505050565b6000806000806060858703121561038857600080fd5b843561039381610339565b935060208501359250604085013567ffffffffffffffff808211156103b757600080fd5b818701915087601f8301126103cb57600080fd5b8135818111156103da57600080fd5b8860208285010111156103ec57600080fd5b95989497505060200194505050565b60006020828403121561040d57600080fd5b5051919050565b60006020828403121561042657600080fd5b8151801515811461036b57600080fdfea264697066735822122048a3af69f0bb2d2f6b71d5d21393daa248aeacae5841726565588b4a6c7ad4fb64736f6c634300080b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100675760003560e01c80638da5cb5b116100505780638da5cb5b14610089578063c0ee0b8a146100b8578063f2fde38b146100c657600080fd5b806317ffc3201461006c578063715018a614610081575b600080fd5b61007f61007a36600461034e565b6100d9565b005b61007f610195565b60005461009c906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b61007f610067366004610372565b61007f6100d436600461034e565b610201565b6000546001600160a01b031633146100f057600080fd5b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610150573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061017491906103fb565b600054909150610191906001600160a01b03848116911683610224565b5050565b6000546001600160a01b031633146101ac57600080fd5b600080546040516001600160a01b03909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6000546001600160a01b0316331461021857600080fd5b610221816102be565b50565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af115801561028c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b09190610414565b6102b957600080fd5b505050565b6001600160a01b0381166102d157600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6001600160a01b038116811461022157600080fd5b60006020828403121561036057600080fd5b813561036b81610339565b9392505050565b6000806000806060858703121561038857600080fd5b843561039381610339565b935060208501359250604085013567ffffffffffffffff808211156103b757600080fd5b818701915087601f8301126103cb57600080fd5b8135818111156103da57600080fd5b8860208285010111156103ec57600080fd5b95989497505060200194505050565b60006020828403121561040d57600080fd5b5051919050565b60006020828403121561042657600080fd5b8151801515811461036b57600080fdfea264697066735822122048a3af69f0bb2d2f6b71d5d21393daa248aeacae5841726565588b4a6c7ad4fb64736f6c634300080b0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2544:54",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:54",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "71:109:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "158:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "167:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "170:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "160:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "160:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "160:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "94:5:54"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "105:5:54"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "112:42:54",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "101:3:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "101:54:54"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "91:2:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "91:65:54"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "84:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "84:73:54"
                  },
                  "nodeType": "YulIf",
                  "src": "81:93:54"
                }
              ]
            },
            "name": "validator_revert_contract_ERC20Basic",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "60:5:54",
                "type": ""
              }
            ],
            "src": "14:166:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "274:189:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "320:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "329:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "332:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "322:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "322:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "322:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "295:7:54"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "304:9:54"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "291:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "291:23:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "316:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "287:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "287:32:54"
                  },
                  "nodeType": "YulIf",
                  "src": "284:52:54"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "345:36:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "371:9:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "358:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "358:23:54"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "349:5:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "427:5:54"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_ERC20Basic",
                      "nodeType": "YulIdentifier",
                      "src": "390:36:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "390:43:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "390:43:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "442:15:54",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "452:5:54"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "442:6:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ERC20Basic_$4899",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "240:9:54",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "251:7:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "263:6:54",
                "type": ""
              }
            ],
            "src": "185:278:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "569:125:54",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "579:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "591:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "602:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "587:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "587:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "579:4:54"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "621:9:54"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "636:6:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "644:42:54",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "632:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "632:55:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "614:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "614:74:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "614:74:54"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "538:9:54",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "549:6:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "560:4:54",
                "type": ""
              }
            ],
            "src": "468:226:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "822:683:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "868:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "877:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "880:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "870:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "870:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "870:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "843:7:54"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "852:9:54"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "839:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "839:23:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "864:2:54",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "835:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "835:32:54"
                  },
                  "nodeType": "YulIf",
                  "src": "832:52:54"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "893:36:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "919:9:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "906:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "906:23:54"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "897:5:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "975:5:54"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_ERC20Basic",
                      "nodeType": "YulIdentifier",
                      "src": "938:36:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "938:43:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "938:43:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "990:15:54",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1000:5:54"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "990:6:54"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1014:42:54",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1041:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1052:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1037:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1037:18:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1024:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1024:32:54"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1014:6:54"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1065:46:54",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1096:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1107:2:54",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1092:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1092:18:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1079:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1079:32:54"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1069:6:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1120:28:54",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1130:18:54",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1124:2:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1175:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1184:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1187:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1177:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1177:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1177:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1163:6:54"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1171:2:54"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1160:2:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1160:14:54"
                  },
                  "nodeType": "YulIf",
                  "src": "1157:34:54"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1200:32:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1214:9:54"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1225:6:54"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1210:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1210:22:54"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "1204:2:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1280:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1289:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1292:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1282:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1282:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1282:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1259:2:54"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1263:4:54",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1255:3:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1255:13:54"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1270:7:54"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1251:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1251:27:54"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1244:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1244:35:54"
                  },
                  "nodeType": "YulIf",
                  "src": "1241:55:54"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1305:30:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1332:2:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1319:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1319:16:54"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1309:6:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1362:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1371:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1374:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1364:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1364:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1364:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1350:6:54"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1358:2:54"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1347:2:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1347:14:54"
                  },
                  "nodeType": "YulIf",
                  "src": "1344:34:54"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1428:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1437:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1440:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1430:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1430:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1430:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1401:2:54"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "1405:6:54"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1397:3:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1397:15:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1414:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1393:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1393:24:54"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1419:7:54"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1390:2:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1390:37:54"
                  },
                  "nodeType": "YulIf",
                  "src": "1387:57:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1453:21:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1467:2:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1471:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1463:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1463:11:54"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1453:6:54"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1483:16:54",
                  "value": {
                    "name": "length",
                    "nodeType": "YulIdentifier",
                    "src": "1493:6:54"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1483:6:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "764:9:54",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "775:7:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "787:6:54",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "795:6:54",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "803:6:54",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "811:6:54",
                "type": ""
              }
            ],
            "src": "699:806:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1580:189:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1626:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1635:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1638:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1628:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1628:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1628:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1601:7:54"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1610:9:54"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1597:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1597:23:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1622:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1593:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1593:32:54"
                  },
                  "nodeType": "YulIf",
                  "src": "1590:52:54"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1651:36:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1677:9:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1664:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1664:23:54"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1655:5:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1733:5:54"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_ERC20Basic",
                      "nodeType": "YulIdentifier",
                      "src": "1696:36:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1696:43:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1696:43:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1748:15:54",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1758:5:54"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1748:6:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1546:9:54",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1557:7:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1569:6:54",
                "type": ""
              }
            ],
            "src": "1510:259:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1855:103:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1901:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1910:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1913:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1903:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1903:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1903:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1876:7:54"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1885:9:54"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1872:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1872:23:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1897:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1868:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1868:32:54"
                  },
                  "nodeType": "YulIf",
                  "src": "1865:52:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1926:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1942:9:54"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1936:5:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1936:16:54"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1926:6:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1821:9:54",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1832:7:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1844:6:54",
                "type": ""
              }
            ],
            "src": "1774:184:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2092:168:54",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2102:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2114:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2125:2:54",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2110:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2110:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2102:4:54"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2144:9:54"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2159:6:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2167:42:54",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2155:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2155:55:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2137:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2137:74:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2137:74:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2231:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2242:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2227:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2227:18:54"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2247:6:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2220:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2220:34:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2220:34:54"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2053:9:54",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2064:6:54",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2072:6:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2083:4:54",
                "type": ""
              }
            ],
            "src": "1963:297:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2343:199:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2389:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2398:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2401:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2391:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2391:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2391:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2364:7:54"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2373:9:54"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2360:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2360:23:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2385:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2356:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2356:32:54"
                  },
                  "nodeType": "YulIf",
                  "src": "2353:52:54"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2414:29:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2433:9:54"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2427:5:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2427:16:54"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2418:5:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2496:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2505:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2508:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2498:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2498:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2498:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2465:5:54"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2486:5:54"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2479:6:54"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2479:13:54"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2472:6:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2472:21:54"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2462:2:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2462:32:54"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2455:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2455:40:54"
                  },
                  "nodeType": "YulIf",
                  "src": "2452:60:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2521:15:54",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2531:5:54"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2521:6:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2309:9:54",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2320:7:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2332:6:54",
                "type": ""
              }
            ],
            "src": "2265:277:54"
          }
        ]
      },
      "contents": "{\n    { }\n    function validator_revert_contract_ERC20Basic(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_ERC20Basic_$4899(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_ERC20Basic(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_ERC20Basic(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value2 := add(_2, 32)\n        value3 := length\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_ERC20Basic(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
      "id": 54,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "382:457:45:-:0;;;;;;;;;;;;-1:-1:-1;588:5:47;:18;;-1:-1:-1;;;;;;588:18:47;596:10;588:18;;;382:457:45;;;;;;",
  "deployedSourceMap": "382:457:45:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;629:161:41;;;;;;:::i;:::-;;:::i;:::-;;1022:111:47;;;:::i;269:20::-;;;;;-1:-1:-1;;;;;269:20:47;;;;;;-1:-1:-1;;;;;632:55:54;;;614:74;;602:2;587:18;269:20:47;;;;;;;667:169:45;;;;;;:::i;1295:111:47:-;;;;;;:::i;:::-;;:::i;629:161:41:-;740:5:47;;-1:-1:-1;;;;;740:5:47;726:10;:19;718:28;;;;;;713:31:41::1;::::0;;;;738:4:::1;713:31;::::0;::::1;614:74:54::0;695:15:41::1;::::0;-1:-1:-1;;;;;713:16:41;::::1;::::0;::::1;::::0;587:18:54;;713:31:41::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;770:5;::::0;695:49;;-1:-1:-1;750:35:41::1;::::0;-1:-1:-1;;;;;750:19:41;;::::1;::::0;770:5:::1;695:49:::0;750:19:::1;:35::i;:::-;689:101;629:161:::0;:::o;1022:111:47:-;740:5;;-1:-1:-1;;;;;740:5:47;726:10;:19;718:28;;;;;;1098:5:::1;::::0;;1079:25:::1;::::0;-1:-1:-1;;;;;1098:5:47;;::::1;::::0;1079:25:::1;::::0;::::1;1126:1;1110:18:::0;;-1:-1:-1;;1110:18:47::1;::::0;;1022:111::o;1295:::-;740:5;;-1:-1:-1;;;;;740:5:47;726:10;:19;718:28;;;;;;1372:29:::1;1391:9;1372:18;:29::i;:::-;1295:111:::0;:::o;376:149:53:-;491:28;;;;;-1:-1:-1;;;;;2155:55:54;;;491:28:53;;;2137:74:54;2227:18;;;2220:34;;;491:15:53;;;;;2110:18:54;;491:28:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;483:37;;;;;;376:149;;;:::o;1541:171:47:-;-1:-1:-1;;;;;1611:23:47;;1603:32;;;;;;1667:5;;;1646:38;;-1:-1:-1;;;;;1646:38:47;;;;1667:5;;;1646:38;;;1690:5;:17;;-1:-1:-1;;1690:17:47;-1:-1:-1;;;;;1690:17:47;;;;;;;;;;1541:171::o;14:166:54:-;-1:-1:-1;;;;;105:5:54;101:54;94:5;91:65;81:93;;170:1;167;160:12;185:278;263:6;316:2;304:9;295:7;291:23;287:32;284:52;;;332:1;329;322:12;284:52;371:9;358:23;390:43;427:5;390:43;:::i;:::-;452:5;185:278;-1:-1:-1;;;185:278:54:o;699:806::-;787:6;795;803;811;864:2;852:9;843:7;839:23;835:32;832:52;;;880:1;877;870:12;832:52;919:9;906:23;938:43;975:5;938:43;:::i;:::-;1000:5;-1:-1:-1;1052:2:54;1037:18;;1024:32;;-1:-1:-1;1107:2:54;1092:18;;1079:32;1130:18;1160:14;;;1157:34;;;1187:1;1184;1177:12;1157:34;1225:6;1214:9;1210:22;1200:32;;1270:7;1263:4;1259:2;1255:13;1251:27;1241:55;;1292:1;1289;1282:12;1241:55;1332:2;1319:16;1358:2;1350:6;1347:14;1344:34;;;1374:1;1371;1364:12;1344:34;1419:7;1414:2;1405:6;1401:2;1397:15;1393:24;1390:37;1387:57;;;1440:1;1437;1430:12;1387:57;699:806;;;;-1:-1:-1;;1471:2:54;1463:11;;-1:-1:-1;;;699:806:54:o;1774:184::-;1844:6;1897:2;1885:9;1876:7;1872:23;1868:32;1865:52;;;1913:1;1910;1903:12;1865:52;-1:-1:-1;1936:16:54;;1774:184;-1:-1:-1;1774:184:54:o;2265:277::-;2332:6;2385:2;2373:9;2364:7;2360:23;2356:32;2353:52;;;2401:1;2398;2391:12;2353:52;2433:9;2427:16;2486:5;2479:13;2472:21;2465:5;2462:32;2452:60;;2508:1;2505;2498:12",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./CanReclaimToken.sol\";\n\n/**\n * @title Contracts that should not own Tokens\n * @author Remco Bloemen <remco@2π.com>\n * @dev This blocks incoming ERC223 tokens to prevent accidental loss of tokens.\n * Should tokens (any ERC20Basic compatible) end up in the contract, it allows the\n * owner to reclaim the tokens.\n */\ncontract HasNoTokens is CanReclaimToken {\n\n /**\n  * @dev Reject all ERC223 compatible tokens\n  * @param _from address The address that is transferring the tokens\n  * @param _value uint256 the amount of the specified token\n  * @param _data Bytes The data passed from the caller.\n  */\n  function tokenFallback(\n    address _from,\n    uint256 _value,\n    bytes calldata _data\n  )\n    external\n    pure\n  {\n    _from;\n    _value;\n    _data;\n    revert();\n  }\n\n}\n",
  "sourcePath": "/Users/kristen/work/monerium/smart-contracts-private/contracts/ownership/HasNoTokens.sol",
  "ast": {
    "absolutePath": "project:/contracts/ownership/HasNoTokens.sol",
    "exportedSymbols": {
      "CanReclaimToken": [
        4325
      ],
      "ERC20Basic": [
        4899
      ],
      "HasNoTokens": [
        4482
      ],
      "Ownable": [
        4589
      ],
      "SafeERC20": [
        4923
      ]
    },
    "id": 4483,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4457,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:45"
      },
      {
        "absolutePath": "project:/contracts/ownership/CanReclaimToken.sol",
        "file": "./CanReclaimToken.sol",
        "id": 4458,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4483,
        "sourceUnit": 4326,
        "src": "57:31:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4460,
              "name": "CanReclaimToken",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4325,
              "src": "406:15:45"
            },
            "id": 4461,
            "nodeType": "InheritanceSpecifier",
            "src": "406:15:45"
          }
        ],
        "canonicalName": "HasNoTokens",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 4459,
          "nodeType": "StructuredDocumentation",
          "src": "90:291:45",
          "text": " @title Contracts that should not own Tokens\n @author Remco Bloemen <remco@2π.com>\n @dev This blocks incoming ERC223 tokens to prevent accidental loss of tokens.\n Should tokens (any ERC20Basic compatible) end up in the contract, it allows the\n owner to reclaim the tokens."
        },
        "fullyImplemented": true,
        "id": 4482,
        "linearizedBaseContracts": [
          4482,
          4325,
          4589
        ],
        "name": "HasNoTokens",
        "nameLocation": "391:11:45",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4480,
              "nodeType": "Block",
              "src": "783:53:45",
              "statements": [
                {
                  "expression": {
                    "id": 4471,
                    "name": "_from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4464,
                    "src": "789:5:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4472,
                  "nodeType": "ExpressionStatement",
                  "src": "789:5:45"
                },
                {
                  "expression": {
                    "id": 4473,
                    "name": "_value",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4466,
                    "src": "800:6:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4474,
                  "nodeType": "ExpressionStatement",
                  "src": "800:6:45"
                },
                {
                  "expression": {
                    "id": 4475,
                    "name": "_data",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4468,
                    "src": "812:5:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "id": 4476,
                  "nodeType": "ExpressionStatement",
                  "src": "812:5:45"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4477,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "823:6:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 4478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "823:8:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4479,
                  "nodeType": "ExpressionStatement",
                  "src": "823:8:45"
                }
              ]
            },
            "documentation": {
              "id": 4462,
              "nodeType": "StructuredDocumentation",
              "src": "426:238:45",
              "text": " @dev Reject all ERC223 compatible tokens\n @param _from address The address that is transferring the tokens\n @param _value uint256 the amount of the specified token\n @param _data Bytes The data passed from the caller."
            },
            "functionSelector": "c0ee0b8a",
            "id": 4481,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenFallback",
            "nameLocation": "676:13:45",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4469,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4464,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "703:5:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 4481,
                  "src": "695:13:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4463,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "695:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4466,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "722:6:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 4481,
                  "src": "714:14:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4465,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "714:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4468,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "749:5:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 4481,
                  "src": "734:20:45",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4467,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "734:5:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "689:69:45"
            },
            "returnParameters": {
              "id": 4470,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "783:0:45"
            },
            "scope": 4482,
            "src": "667:169:45",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4483,
        "src": "382:457:45",
        "usedErrors": []
      }
    ],
    "src": "32:808:45"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/ownership/HasNoTokens.sol",
    "exportedSymbols": {
      "CanReclaimToken": [
        4325
      ],
      "ERC20Basic": [
        4899
      ],
      "HasNoTokens": [
        4482
      ],
      "Ownable": [
        4589
      ],
      "SafeERC20": [
        4923
      ]
    },
    "id": 4483,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4457,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:45"
      },
      {
        "absolutePath": "project:/contracts/ownership/CanReclaimToken.sol",
        "file": "./CanReclaimToken.sol",
        "id": 4458,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4483,
        "sourceUnit": 4326,
        "src": "57:31:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4460,
              "name": "CanReclaimToken",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4325,
              "src": "406:15:45"
            },
            "id": 4461,
            "nodeType": "InheritanceSpecifier",
            "src": "406:15:45"
          }
        ],
        "canonicalName": "HasNoTokens",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 4459,
          "nodeType": "StructuredDocumentation",
          "src": "90:291:45",
          "text": " @title Contracts that should not own Tokens\n @author Remco Bloemen <remco@2π.com>\n @dev This blocks incoming ERC223 tokens to prevent accidental loss of tokens.\n Should tokens (any ERC20Basic compatible) end up in the contract, it allows the\n owner to reclaim the tokens."
        },
        "fullyImplemented": true,
        "id": 4482,
        "linearizedBaseContracts": [
          4482,
          4325,
          4589
        ],
        "name": "HasNoTokens",
        "nameLocation": "391:11:45",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4480,
              "nodeType": "Block",
              "src": "783:53:45",
              "statements": [
                {
                  "expression": {
                    "id": 4471,
                    "name": "_from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4464,
                    "src": "789:5:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4472,
                  "nodeType": "ExpressionStatement",
                  "src": "789:5:45"
                },
                {
                  "expression": {
                    "id": 4473,
                    "name": "_value",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4466,
                    "src": "800:6:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4474,
                  "nodeType": "ExpressionStatement",
                  "src": "800:6:45"
                },
                {
                  "expression": {
                    "id": 4475,
                    "name": "_data",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4468,
                    "src": "812:5:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "id": 4476,
                  "nodeType": "ExpressionStatement",
                  "src": "812:5:45"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4477,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "823:6:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 4478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "823:8:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4479,
                  "nodeType": "ExpressionStatement",
                  "src": "823:8:45"
                }
              ]
            },
            "documentation": {
              "id": 4462,
              "nodeType": "StructuredDocumentation",
              "src": "426:238:45",
              "text": " @dev Reject all ERC223 compatible tokens\n @param _from address The address that is transferring the tokens\n @param _value uint256 the amount of the specified token\n @param _data Bytes The data passed from the caller."
            },
            "functionSelector": "c0ee0b8a",
            "id": 4481,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenFallback",
            "nameLocation": "676:13:45",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4469,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4464,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "703:5:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 4481,
                  "src": "695:13:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4463,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "695:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4466,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "722:6:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 4481,
                  "src": "714:14:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4465,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "714:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4468,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "749:5:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 4481,
                  "src": "734:20:45",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4467,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "734:5:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "689:69:45"
            },
            "returnParameters": {
              "id": 4470,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "783:0:45"
            },
            "scope": 4482,
            "src": "667:169:45",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4483,
        "src": "382:457:45",
        "usedErrors": []
      }
    ],
    "src": "32:808:45"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-04-28T11:51:18.688Z",
  "devdoc": {
    "author": "Remco Bloemen <remco@2π.com>",
    "details": "This blocks incoming ERC223 tokens to prevent accidental loss of tokens. Should tokens (any ERC20Basic compatible) end up in the contract, it allows the owner to reclaim the tokens.",
    "kind": "dev",
    "methods": {
      "reclaimToken(address)": {
        "details": "Reclaim all ERC20Basic compatible tokens",
        "params": {
          "_token": "ERC20Basic The address of the token contract"
        }
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "tokenFallback(address,uint256,bytes)": {
        "details": "Reject all ERC223 compatible tokens",
        "params": {
          "_data": "Bytes The data passed from the caller.",
          "_from": "address The address that is transferring the tokens",
          "_value": "uint256 the amount of the specified token"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "_newOwner": "The address to transfer ownership to."
        }
      }
    },
    "title": "Contracts that should not own Tokens",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    },
    "version": 1
  }
}