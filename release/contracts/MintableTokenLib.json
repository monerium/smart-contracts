{
  "contractName": "MintableTokenLib",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Simple ERC20 Token example, with mintable token creationIssue: * https://github.com/OpenZeppelin/openzeppelin-solidity/issues/120 Based on code by TokenMarketNet: https://github.com/TokenMarketNet/ico/blob/master/contracts/MintableToken.sol\",\"kind\":\"dev\",\"methods\":{\"burn(TokenStorage,address,uint256)\":{\"details\":\"Burns tokens.\",\"params\":{\"amount\":\"The amount of tokens to burn.\",\"db\":\"Token storage to operate on.\",\"from\":\"The address holding tokens.\"}},\"burn(TokenStorage,address,uint256,bytes32,uint8,bytes32,bytes32)\":{\"details\":\"Burns tokens from a specific address. To burn the tokens the caller needs to provide a signature proving that the caller is authorized by the token owner to do so.\",\"params\":{\"amount\":\"The amount of tokens to burn.\",\"db\":\"Token storage to operate on.\",\"from\":\"The address holding tokens.\",\"h\":\"Hash which the token owner signed.\",\"r\":\"Signature component.\",\"s\":\"Sigature component.\",\"v\":\"Signature component.\"}},\"mint(TokenStorage,address,uint256)\":{\"details\":\"Mints new tokens.\",\"params\":{\"amount\":\"The amount of tokens to mint.\",\"db\":\"Token storage to operate on.\",\"to\":\"The address that will recieve the minted tokens.\"}}},\"title\":\"Mintable token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/MintableTokenLib.sol\":\"MintableTokenLib\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"project:/contracts/ERC20Lib.sol\":{\"keccak256\":\"0xc837cfee9b6b1f10a1065c5dff89570c0a83ea045e0a6846799d3d9405512b0a\",\"license\":\"apache-2.0\",\"urls\":[\"bzz-raw://d47b69caaef3814ac43baa15013696210411af786f9531c1110358ba62555d83\",\"dweb:/ipfs/QmTPXkfNved7J6Wk58d5GVJLgBYzKcdTURC9gPoz6zRsoi\"]},\"project:/contracts/MintableTokenLib.sol\":{\"keccak256\":\"0x7125c11ecfe67a3f5de6c7070ccfb4b16762b5d6b3bb774e35d10453a15e42d5\",\"license\":\"apache-2.0\",\"urls\":[\"bzz-raw://89f213e78368df9d4a03c3bb115047c1d93c211dee392b8f85d6af1c43f9c480\",\"dweb:/ipfs/QmZ3o15fdqZn1eZfUSgyhVtEkk9DPTJbKYvtJiyMqwWzBB\"]},\"project:/contracts/TokenStorage.sol\":{\"keccak256\":\"0x0b7c74024a921e5059664947ccdd5f53acc7c002e950c2ae0c65c910254387a5\",\"license\":\"apache-2.0\",\"urls\":[\"bzz-raw://0206cdaf6eb7bf0abcd597a8983554e7d1e60bda5b0cb1da9c5912a615be6cc5\",\"dweb:/ipfs/QmfVsjM995WSEL7ebEqWCfXePgzS1aWtr4ArTPPcMPrDr9\"]},\"project:/contracts/TokenStorageLib.sol\":{\"keccak256\":\"0xedf1a374019b821fab804f4ae3a0e910304a678ab9f60ca2d9b0b8f60ef5684a\",\"license\":\"apache-2.0\",\"urls\":[\"bzz-raw://400d7c69282e0b759c800065674ac95d26131936d916db22fb3aac0e7c1a836a\",\"dweb:/ipfs/QmYJt58sYYGfahujyRDCUxn8XXQcvqMe6jwKnpt2rFAJZf\"]},\"project:/contracts/ownership/CanReclaimToken.sol\":{\"keccak256\":\"0x108e55b7d2d50484b7bf5699b1e0b27b29dcd633c8651ea8ca14e0f805f4d2f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bd1fbc3055642b7150e0616d5add5d19e292dee5bc4fa7a0e5865ee1dc4fe3\",\"dweb:/ipfs/Qme4kZKkizviTR3VjadY7rftSX9UV8pqJB7euV9udVVSVF\"]},\"project:/contracts/ownership/Claimable.sol\":{\"keccak256\":\"0x8e75f21c880f9fa7fa382f5082a1a21bfbfbacad1dd891ed8938ebc31d0d39f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e36385dd2c6c12302dd0b845b501a1a42dc3832ef7d038450a472c112ea272\",\"dweb:/ipfs/QmeFJQKneZXfRJ5hyPTNBc95nLP9ix5n87CuApbHgb7hWb\"]},\"project:/contracts/ownership/HasNoContracts.sol\":{\"keccak256\":\"0x4b56f82527c084cec1ded0d6ce4161615d7e9448b49c904278647701afb89015\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e41dc4c6173f707be7020e600622caaf6461851917b2b1a989d41c74c620e49\",\"dweb:/ipfs/QmR286HLknD5ozrEJcy5tFQunwwe6SBh8tLkr97hPnzu7N\"]},\"project:/contracts/ownership/HasNoEther.sol\":{\"keccak256\":\"0x40c5b0c6c8d908bc764cdcce514c824ce842411f43180111de7d0a75e6ae553e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de45edfc949d8922e1c9f07af298c29edabeb26454d8a2eb093a81b32474d610\",\"dweb:/ipfs/QmZyqeY8y8h6XQ23h2rzpr6bVEa7FCCCu7XwTa8fcJc4cY\"]},\"project:/contracts/ownership/HasNoTokens.sol\":{\"keccak256\":\"0x25be2e066915369ead9f26824c8d22d9523c70cddee5369b092e49503c2ec088\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b52b009a1d8c7a465a81667d691b50301de052b969e05be7bd30a0c5f6846b82\",\"dweb:/ipfs/Qmcsk6qNq9Hy8WYagLQHFrvDYr5783sX4omUWkAeUSXtzy\"]},\"project:/contracts/ownership/NoOwner.sol\":{\"keccak256\":\"0xf0625c71482671d551c3322ea3ab9eceedd2ec0bdbfdb12de13f27a3fffd38b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f0d1ddbbd28155e759df54b2afad17c440b76bae1d66259679ff53b0aca8e81\",\"dweb:/ipfs/QmXdXPDuW2VDBB7YWoms55rb883noVFJXixKoR1namrwJR\"]},\"project:/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x0041c7f55b3f5b57b5fd6d3eec14573596c5f0d59ce8802e08dae01ed6ff7603\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21935211244e684ccbbd0858a4e2194a41c1b3bb36760bbbe4be4b11a63dd4cb\",\"dweb:/ipfs/Qmbw5C8ZJgA4jRPVP3rqohQb7f72YtUGgBg4eMqX3u56Rv\"]},\"project:/contracts/token/ERC20/ERC20Basic.sol\":{\"keccak256\":\"0x54484484f83afe433e6bc50c0003d99c5e877747a783581500a25df8ce7017dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85c97b9279681e06af93f38223117d3351acbe205ed8a47d33c650149ef09bb2\",\"dweb:/ipfs/QmYAcawJZ5tH9e6Syno9fejaaNdpzXbjtWQUhKZyA86g5d\"]},\"project:/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xa4c3829e43d20517869a6555f80977d4e582ae439b6b7c5013960fb05932f635\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d815f26b889c44a2f1703cb59ddf9a5e426447df50ce91e240bc68f046b99465\",\"dweb:/ipfs/QmUTTNoty755VqS2jvZra7HrumCnRNkLcPRihs7W3s4Vj2\"]}},\"version\":1}",
  "bytecode": "0x61039a61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c8063799639d414610050578063a6c9ac2814610084578063b0c29c74146100a4575b600080fd5b81801561005c57600080fd5b5061007061006b3660046102ac565b6100c4565b604051901515815260200160405180910390f35b81801561009057600080fd5b5061007061009f366004610323565b6101b8565b8180156100b057600080fd5b506100706100bf366004610323565b610242565b6040805160008082526020820180845287905260ff86169282019290925260608101849052608081018390526001600160a01b0388169060019060a0016020604051602081039080840390855afa158015610123573d6000803e3d6000fd5b505050602060405103516001600160a01b0316146101a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f7369676e61747572652f6861736820646f6573206e6f74206d61746368000000604482015260640160405180910390fd5b6101ac8888886101b8565b98975050505050505050565b6040517fcf8eeb7e0000000000000000000000000000000000000000000000000000000081526001600160a01b038381166004830152602482018390526000919085169063cf8eeb7e906044015b600060405180830381600087803b15801561022057600080fd5b505af1158015610234573d6000803e3d6000fd5b506001979650505050505050565b6040517f21e5383a0000000000000000000000000000000000000000000000000000000081526001600160a01b03838116600483015260248201839052600091908516906321e5383a90604401610206565b6001600160a01b03811681146102a957600080fd5b50565b600080600080600080600060e0888a0312156102c757600080fd5b87356102d281610294565b965060208801356102e281610294565b95506040880135945060608801359350608088013560ff8116811461030657600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060006060848603121561033857600080fd5b833561034381610294565b9250602084013561035381610294565b92959294505050604091909101359056fea26469706673582212201d272157c2a42bd453f6998296fd55baa12081a8f7da8bfccabb5c9c9939903764736f6c634300080b0033",
  "deployedBytecode": "0x730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c8063799639d414610050578063a6c9ac2814610084578063b0c29c74146100a4575b600080fd5b81801561005c57600080fd5b5061007061006b3660046102ac565b6100c4565b604051901515815260200160405180910390f35b81801561009057600080fd5b5061007061009f366004610323565b6101b8565b8180156100b057600080fd5b506100706100bf366004610323565b610242565b6040805160008082526020820180845287905260ff86169282019290925260608101849052608081018390526001600160a01b0388169060019060a0016020604051602081039080840390855afa158015610123573d6000803e3d6000fd5b505050602060405103516001600160a01b0316146101a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f7369676e61747572652f6861736820646f6573206e6f74206d61746368000000604482015260640160405180910390fd5b6101ac8888886101b8565b98975050505050505050565b6040517fcf8eeb7e0000000000000000000000000000000000000000000000000000000081526001600160a01b038381166004830152602482018390526000919085169063cf8eeb7e906044015b600060405180830381600087803b15801561022057600080fd5b505af1158015610234573d6000803e3d6000fd5b506001979650505050505050565b6040517f21e5383a0000000000000000000000000000000000000000000000000000000081526001600160a01b03838116600483015260248201839052600091908516906321e5383a90604401610206565b6001600160a01b03811681146102a957600080fd5b50565b600080600080600080600060e0888a0312156102c757600080fd5b87356102d281610294565b965060208801356102e281610294565b95506040880135945060608801359350608088013560ff8116811461030657600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060006060848603121561033857600080fd5b833561034381610294565b9250602084013561035381610294565b92959294505050604091909101359056fea26469706673582212201d272157c2a42bd453f6998296fd55baa12081a8f7da8bfccabb5c9c9939903764736f6c634300080b0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2840:54",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:54",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "73:109:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "160:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "169:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "172:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "162:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "162:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "162:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "96:5:54"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "107:5:54"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "114:42:54",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "103:3:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "103:54:54"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "93:2:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "93:65:54"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "86:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "86:73:54"
                  },
                  "nodeType": "YulIf",
                  "src": "83:93:54"
                }
              ]
            },
            "name": "validator_revert_contract_TokenStorage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "62:5:54",
                "type": ""
              }
            ],
            "src": "14:168:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "378:687:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "425:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "434:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "437:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "427:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "427:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "427:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "399:7:54"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "408:9:54"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "395:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "395:23:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "420:3:54",
                        "type": "",
                        "value": "224"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "391:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "391:33:54"
                  },
                  "nodeType": "YulIf",
                  "src": "388:53:54"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "450:36:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "476:9:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "463:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "463:23:54"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "454:5:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "534:5:54"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_TokenStorage",
                      "nodeType": "YulIdentifier",
                      "src": "495:38:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "495:45:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "495:45:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "549:15:54",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "559:5:54"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "549:6:54"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "573:47:54",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "605:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "616:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "601:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "601:18:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "588:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "588:32:54"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "577:7:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "668:7:54"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_TokenStorage",
                      "nodeType": "YulIdentifier",
                      "src": "629:38:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "629:47:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "629:47:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "685:17:54",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "695:7:54"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "685:6:54"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "711:42:54",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "738:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "749:2:54",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "734:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "734:18:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "721:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "721:32:54"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "711:6:54"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "762:42:54",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "789:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "800:2:54",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "785:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "785:18:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "772:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "772:32:54"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "762:6:54"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "813:48:54",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "845:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "856:3:54",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "841:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "841:19:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "828:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "828:33:54"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "817:7:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "913:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "922:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "925:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "915:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "915:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "915:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value_2",
                            "nodeType": "YulIdentifier",
                            "src": "883:7:54"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value_2",
                                "nodeType": "YulIdentifier",
                                "src": "896:7:54"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "905:4:54",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "892:3:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "892:18:54"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "880:2:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "880:31:54"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "873:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "873:39:54"
                  },
                  "nodeType": "YulIf",
                  "src": "870:59:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "938:17:54",
                  "value": {
                    "name": "value_2",
                    "nodeType": "YulIdentifier",
                    "src": "948:7:54"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "938:6:54"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "964:43:54",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "991:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1002:3:54",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "987:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "987:19:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "974:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "974:33:54"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "964:6:54"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1016:43:54",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1043:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1054:3:54",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1039:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1039:19:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1026:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1026:33:54"
                  },
                  "variableNames": [
                    {
                      "name": "value6",
                      "nodeType": "YulIdentifier",
                      "src": "1016:6:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_TokenStorage_$4103t_addresst_uint256t_bytes32t_uint8t_bytes32t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "296:9:54",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "307:7:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "319:6:54",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "327:6:54",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "335:6:54",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "343:6:54",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "351:6:54",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "359:6:54",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "367:6:54",
                "type": ""
              }
            ],
            "src": "187:878:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1173:92:54",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1183:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1195:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1206:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1191:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1191:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1183:4:54"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1225:9:54"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1250:6:54"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1243:6:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1243:14:54"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1236:6:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1236:22:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1218:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1218:41:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1218:41:54"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_library_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1142:9:54",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1153:6:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1164:4:54",
                "type": ""
              }
            ],
            "src": "1070:195:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1395:380:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1441:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1450:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1453:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1443:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1443:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1443:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1416:7:54"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1425:9:54"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1412:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1412:23:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1437:2:54",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1408:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1408:32:54"
                  },
                  "nodeType": "YulIf",
                  "src": "1405:52:54"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1466:36:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1492:9:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1479:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1479:23:54"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1470:5:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1550:5:54"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_TokenStorage",
                      "nodeType": "YulIdentifier",
                      "src": "1511:38:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1511:45:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1511:45:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1565:15:54",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1575:5:54"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1565:6:54"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1589:47:54",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1621:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1632:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1617:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1617:18:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1604:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1604:32:54"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "1593:7:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "1684:7:54"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_TokenStorage",
                      "nodeType": "YulIdentifier",
                      "src": "1645:38:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1645:47:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1645:47:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1701:17:54",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "1711:7:54"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1701:6:54"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1727:42:54",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1754:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1765:2:54",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1750:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1750:18:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1737:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1737:32:54"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1727:6:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_TokenStorage_$4103t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1345:9:54",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1356:7:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1368:6:54",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1376:6:54",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1384:6:54",
                "type": ""
              }
            ],
            "src": "1270:505:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1961:217:54",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1971:27:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1983:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1994:3:54",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1979:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1979:19:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1971:4:54"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2014:9:54"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2025:6:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2007:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2007:25:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2007:25:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2052:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2063:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2048:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2048:18:54"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2072:6:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2080:4:54",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2068:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2068:17:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2041:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2041:45:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2041:45:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2106:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2117:2:54",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2102:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2102:18:54"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "2122:6:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2095:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2095:34:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2095:34:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2149:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2160:2:54",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2145:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2145:18:54"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "2165:6:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2138:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2138:34:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2138:34:54"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1906:9:54",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1917:6:54",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1925:6:54",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1933:6:54",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1941:6:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1952:4:54",
                "type": ""
              }
            ],
            "src": "1780:398:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2357:179:54",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2374:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2385:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2367:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2367:21:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2367:21:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2408:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2419:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2404:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2404:18:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2424:2:54",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2397:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2397:30:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2397:30:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2447:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2458:2:54",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2443:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2443:18:54"
                      },
                      {
                        "hexValue": "7369676e61747572652f6861736820646f6573206e6f74206d61746368",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2463:31:54",
                        "type": "",
                        "value": "signature/hash does not match"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2436:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2436:59:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2436:59:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2504:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2516:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2527:2:54",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2512:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2512:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2504:4:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9e83ec76705e7e828416b76faef198c2c4f74e79f7ed646d650be22a2b7497ab__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2334:9:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2348:4:54",
                "type": ""
              }
            ],
            "src": "2183:353:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2670:168:54",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2680:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2692:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2703:2:54",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2688:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2688:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2680:4:54"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2722:9:54"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2737:6:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2745:42:54",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2733:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2733:55:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2715:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2715:74:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2715:74:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2809:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2820:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2805:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2805:18:54"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2825:6:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2798:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2798:34:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2798:34:54"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2631:9:54",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2642:6:54",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2650:6:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2661:4:54",
                "type": ""
              }
            ],
            "src": "2541:297:54"
          }
        ]
      },
      "contents": "{\n    { }\n    function validator_revert_contract_TokenStorage(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_TokenStorage_$4103t_addresst_uint256t_bytes32t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_TokenStorage(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_contract_TokenStorage(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let value_2 := calldataload(add(headStart, 128))\n        if iszero(eq(value_2, and(value_2, 0xff))) { revert(0, 0) }\n        value4 := value_2\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_contract$_TokenStorage_$4103t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_TokenStorage(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_contract_TokenStorage(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_9e83ec76705e7e828416b76faef198c2c4f74e79f7ed646d650be22a2b7497ab__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"signature/hash does not match\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n}",
      "id": 54,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "1074:1736:25:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1074:1736:25;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "1074:1736:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2440:367;;;;;;;;;;-1:-1:-1;2440:367:25;;;;;:::i;:::-;;:::i;:::-;;;1243:14:54;;1236:22;1218:41;;1206:2;1191:18;2440:367:25;;;;;;;1728:195;;;;;;;;;;-1:-1:-1;1728:195:25;;;;;:::i;:::-;;:::i;1343:193::-;;;;;;;;;;-1:-1:-1;1343:193:25;;;;;:::i;:::-;;:::i;2440:367::-;2677:21;;;2636:4;2677:21;;;;;;;;;2007:25:54;;;2080:4;2068:17;;2048:18;;;2041:45;;;;2102:18;;;2095:34;;;2145:18;;;2138:34;;;-1:-1:-1;;;;;2677:29:25;;;:21;;1979:19:54;;2677:21:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2677:29:25;;2656:105;;;;;;;2385:2:54;2656:105:25;;;2367:21:54;2424:2;2404:18;;;2397:30;2463:31;2443:18;;;2436:59;2512:18;;2656:105:25;;;;;;;;2778:22;2783:2;2787:4;2793:6;2778:4;:22::i;:::-;2771:29;2440:367;-1:-1:-1;;;;;;;;2440:367:25:o;1728:195::-;1868:27;;;;;-1:-1:-1;;;;;2733:55:54;;;1868:27:25;;;2715:74:54;2805:18;;;2798:34;;;1848:4:25;;1868:13;;;;;;2688:18:54;;1868:27:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1912:4:25;;1728:195;-1:-1:-1;;;;;;;1728:195:25:o;1343:193::-;1483:25;;;;;-1:-1:-1;;;;;2733:55:54;;;1483:25:25;;;2715:74:54;2805:18;;;2798:34;;;1463:4:25;;1483:13;;;;;;2688:18:54;;1483:25:25;2541:297:54;14:168;-1:-1:-1;;;;;107:5:54;103:54;96:5;93:65;83:93;;172:1;169;162:12;83:93;14:168;:::o;187:878::-;319:6;327;335;343;351;359;367;420:3;408:9;399:7;395:23;391:33;388:53;;;437:1;434;427:12;388:53;476:9;463:23;495:45;534:5;495:45;:::i;:::-;559:5;-1:-1:-1;616:2:54;601:18;;588:32;629:47;588:32;629:47;:::i;:::-;695:7;-1:-1:-1;749:2:54;734:18;;721:32;;-1:-1:-1;800:2:54;785:18;;772:32;;-1:-1:-1;856:3:54;841:19;;828:33;905:4;892:18;;880:31;;870:59;;925:1;922;915:12;870:59;187:878;;;;-1:-1:-1;187:878:54;;;;948:7;1002:3;987:19;;974:33;;-1:-1:-1;1054:3:54;1039:19;;;1026:33;;187:878;-1:-1:-1;;187:878:54:o;1270:505::-;1368:6;1376;1384;1437:2;1425:9;1416:7;1412:23;1408:32;1405:52;;;1453:1;1450;1443:12;1405:52;1492:9;1479:23;1511:45;1550:5;1511:45;:::i;:::-;1575:5;-1:-1:-1;1632:2:54;1617:18;;1604:32;1645:47;1604:32;1645:47;:::i;:::-;1270:505;;1711:7;;-1:-1:-1;;;1765:2:54;1750:18;;;;1737:32;;1270:505::o",
  "source": "/* SPDX-License-Identifier: apache-2.0 */\n/**\n * Copyright 2019 Monerium ehf.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npragma solidity 0.8.11;\n\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"./ERC20Lib.sol\";\nimport \"./TokenStorage.sol\";\n\n/**\n * @title Mintable token\n * @dev Simple ERC20 Token example, with mintable token creation\n * @dev Issue: * https://github.com/OpenZeppelin/openzeppelin-solidity/issues/120\n * Based on code by TokenMarketNet: https://github.com/TokenMarketNet/ico/blob/master/contracts/MintableToken.sol\n */\n\nlibrary MintableTokenLib {\n\n  using SafeMath for uint;\n\n    /**\n     * @dev Mints new tokens.\n     * @param db Token storage to operate on.\n     * @param to The address that will recieve the minted tokens.\n     * @param amount The amount of tokens to mint.\n     */\n    function mint(\n        TokenStorage db,\n        address to,\n        uint amount\n    )\n        external\n        returns (bool)\n    {\n        db.addBalance(to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Burns tokens.\n     * @param db Token storage to operate on.\n     * @param from The address holding tokens.\n     * @param amount The amount of tokens to burn.\n     */\n    function burn(\n        TokenStorage db,\n        address from,\n        uint amount\n    )\n        public\n        returns (bool)\n    {\n        db.subBalance(from, amount);\n        return true;\n    }\n\n    /**\n     * @dev Burns tokens from a specific address.\n     * To burn the tokens the caller needs to provide a signature\n     * proving that the caller is authorized by the token owner to do so.\n     * @param db Token storage to operate on.\n     * @param from The address holding tokens.\n     * @param amount The amount of tokens to burn.\n     * @param h Hash which the token owner signed.\n     * @param v Signature component.\n     * @param r Signature component.\n     * @param s Sigature component.\n     */\n    function burn(\n        TokenStorage db,\n        address from,\n        uint amount,\n        bytes32 h,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    )\n        external\n        returns (bool)\n    {\n        require(\n            ecrecover(h, v, r, s) == from,\n            \"signature/hash does not match\"\n        );\n        return burn(db, from, amount);\n    }\n\n}\n",
  "sourcePath": "/Users/kristen/work/monerium/smart-contracts-private/contracts/MintableTokenLib.sol",
  "ast": {
    "absolutePath": "project:/contracts/MintableTokenLib.sol",
    "exportedSymbols": {
      "CanReclaimToken": [
        4325
      ],
      "Claimable": [
        4383
      ],
      "ERC20Basic": [
        4899
      ],
      "ERC20Lib": [
        1751
      ],
      "HasNoContracts": [
        4412
      ],
      "HasNoEther": [
        4455
      ],
      "HasNoTokens": [
        4482
      ],
      "MintableTokenLib": [
        2313
      ],
      "NoOwner": [
        4495
      ],
      "Ownable": [
        4589
      ],
      "SafeERC20": [
        4923
      ],
      "SafeMath": [
        1341
      ],
      "TokenStorage": [
        4103
      ],
      "TokenStorageLib": [
        4270
      ]
    },
    "id": 2314,
    "license": "apache-2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2219,
        "literals": [
          "solidity",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "641:23:25"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 2220,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2314,
        "sourceUnit": 1342,
        "src": "666:57:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ERC20Lib.sol",
        "file": "./ERC20Lib.sol",
        "id": 2221,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2314,
        "sourceUnit": 1752,
        "src": "724:24:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/TokenStorage.sol",
        "file": "./TokenStorage.sol",
        "id": 2222,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2314,
        "sourceUnit": 4104,
        "src": "749:28:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "MintableTokenLib",
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 2223,
          "nodeType": "StructuredDocumentation",
          "src": "779:293:25",
          "text": " @title Mintable token\n @dev Simple ERC20 Token example, with mintable token creation\n @dev Issue: * https://github.com/OpenZeppelin/openzeppelin-solidity/issues/120\n Based on code by TokenMarketNet: https://github.com/TokenMarketNet/ico/blob/master/contracts/MintableToken.sol"
        },
        "fullyImplemented": true,
        "id": 2313,
        "linearizedBaseContracts": [
          2313
        ],
        "name": "MintableTokenLib",
        "nameLocation": "1082:16:25",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2226,
            "libraryName": {
              "id": 2224,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1341,
              "src": "1110:8:25"
            },
            "nodeType": "UsingForDirective",
            "src": "1104:24:25",
            "typeName": {
              "id": 2225,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1123:4:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 2248,
              "nodeType": "Block",
              "src": "1473:63:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2242,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2232,
                        "src": "1497:2:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2243,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2234,
                        "src": "1501:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2239,
                        "name": "db",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2230,
                        "src": "1483:2:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenStorage_$4103",
                          "typeString": "contract TokenStorage"
                        }
                      },
                      "id": 2241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4005,
                      "src": "1483:13:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 2244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1483:25:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2245,
                  "nodeType": "ExpressionStatement",
                  "src": "1483:25:25"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1525:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2238,
                  "id": 2247,
                  "nodeType": "Return",
                  "src": "1518:11:25"
                }
              ]
            },
            "documentation": {
              "id": 2227,
              "nodeType": "StructuredDocumentation",
              "src": "1134:204:25",
              "text": " @dev Mints new tokens.\n @param db Token storage to operate on.\n @param to The address that will recieve the minted tokens.\n @param amount The amount of tokens to mint."
            },
            "functionSelector": "b0c29c74",
            "id": 2249,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "1352:4:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2230,
                  "mutability": "mutable",
                  "name": "db",
                  "nameLocation": "1379:2:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2249,
                  "src": "1366:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_TokenStorage_$4103",
                    "typeString": "contract TokenStorage"
                  },
                  "typeName": {
                    "id": 2229,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2228,
                      "name": "TokenStorage",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4103,
                      "src": "1366:12:25"
                    },
                    "referencedDeclaration": 4103,
                    "src": "1366:12:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenStorage_$4103",
                      "typeString": "contract TokenStorage"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2232,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1399:2:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2249,
                  "src": "1391:10:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2231,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1391:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2234,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1416:6:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2249,
                  "src": "1411:11:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2233,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1411:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1356:72:25"
            },
            "returnParameters": {
              "id": 2238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2237,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2249,
                  "src": "1463:4:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2236,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1463:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1462:6:25"
            },
            "scope": 2313,
            "src": "1343:193:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2271,
              "nodeType": "Block",
              "src": "1858:65:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2265,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2255,
                        "src": "1882:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2266,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2257,
                        "src": "1888:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2262,
                        "name": "db",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2253,
                        "src": "1868:2:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenStorage_$4103",
                          "typeString": "contract TokenStorage"
                        }
                      },
                      "id": 2264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "subBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4023,
                      "src": "1868:13:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 2267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1868:27:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2268,
                  "nodeType": "ExpressionStatement",
                  "src": "1868:27:25"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1912:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2261,
                  "id": 2270,
                  "nodeType": "Return",
                  "src": "1905:11:25"
                }
              ]
            },
            "documentation": {
              "id": 2250,
              "nodeType": "StructuredDocumentation",
              "src": "1542:181:25",
              "text": " @dev Burns tokens.\n @param db Token storage to operate on.\n @param from The address holding tokens.\n @param amount The amount of tokens to burn."
            },
            "functionSelector": "a6c9ac28",
            "id": 2272,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "1737:4:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2253,
                  "mutability": "mutable",
                  "name": "db",
                  "nameLocation": "1764:2:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2272,
                  "src": "1751:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_TokenStorage_$4103",
                    "typeString": "contract TokenStorage"
                  },
                  "typeName": {
                    "id": 2252,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2251,
                      "name": "TokenStorage",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4103,
                      "src": "1751:12:25"
                    },
                    "referencedDeclaration": 4103,
                    "src": "1751:12:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenStorage_$4103",
                      "typeString": "contract TokenStorage"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2255,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1784:4:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2272,
                  "src": "1776:12:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2254,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1776:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2257,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1803:6:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2272,
                  "src": "1798:11:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2256,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1798:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1741:74:25"
            },
            "returnParameters": {
              "id": 2261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2260,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2272,
                  "src": "1848:4:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2259,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1848:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1847:6:25"
            },
            "scope": 2313,
            "src": "1728:195:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2311,
              "nodeType": "Block",
              "src": "2646:161:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2295,
                              "name": "h",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2282,
                              "src": "2687:1:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 2296,
                              "name": "v",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2284,
                              "src": "2690:1:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "id": 2297,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2286,
                              "src": "2693:1:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 2298,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2288,
                              "src": "2696:1:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 2294,
                            "name": "ecrecover",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967290,
                            "src": "2677:9:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                            }
                          },
                          "id": 2299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2677:21:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2300,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2278,
                          "src": "2702:4:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2677:29:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7369676e61747572652f6861736820646f6573206e6f74206d61746368",
                        "id": 2302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2720:31:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9e83ec76705e7e828416b76faef198c2c4f74e79f7ed646d650be22a2b7497ab",
                          "typeString": "literal_string \"signature/hash does not match\""
                        },
                        "value": "signature/hash does not match"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9e83ec76705e7e828416b76faef198c2c4f74e79f7ed646d650be22a2b7497ab",
                          "typeString": "literal_string \"signature/hash does not match\""
                        }
                      ],
                      "id": 2293,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2656:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2656:105:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2304,
                  "nodeType": "ExpressionStatement",
                  "src": "2656:105:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2306,
                        "name": "db",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2276,
                        "src": "2783:2:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenStorage_$4103",
                          "typeString": "contract TokenStorage"
                        }
                      },
                      {
                        "id": 2307,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2278,
                        "src": "2787:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2308,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2280,
                        "src": "2793:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TokenStorage_$4103",
                          "typeString": "contract TokenStorage"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2305,
                      "name": "burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2272,
                      "src": "2778:4:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_TokenStorage_$4103_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (contract TokenStorage,address,uint256) returns (bool)"
                      }
                    },
                    "id": 2309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2778:22:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2292,
                  "id": 2310,
                  "nodeType": "Return",
                  "src": "2771:29:25"
                }
              ]
            },
            "documentation": {
              "id": 2273,
              "nodeType": "StructuredDocumentation",
              "src": "1929:506:25",
              "text": " @dev Burns tokens from a specific address.\n To burn the tokens the caller needs to provide a signature\n proving that the caller is authorized by the token owner to do so.\n @param db Token storage to operate on.\n @param from The address holding tokens.\n @param amount The amount of tokens to burn.\n @param h Hash which the token owner signed.\n @param v Signature component.\n @param r Signature component.\n @param s Sigature component."
            },
            "functionSelector": "799639d4",
            "id": 2312,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "2449:4:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2289,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2276,
                  "mutability": "mutable",
                  "name": "db",
                  "nameLocation": "2476:2:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2312,
                  "src": "2463:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_TokenStorage_$4103",
                    "typeString": "contract TokenStorage"
                  },
                  "typeName": {
                    "id": 2275,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2274,
                      "name": "TokenStorage",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4103,
                      "src": "2463:12:25"
                    },
                    "referencedDeclaration": 4103,
                    "src": "2463:12:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenStorage_$4103",
                      "typeString": "contract TokenStorage"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2278,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "2496:4:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2312,
                  "src": "2488:12:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2277,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2488:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2280,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2515:6:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2312,
                  "src": "2510:11:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2279,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2510:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2282,
                  "mutability": "mutable",
                  "name": "h",
                  "nameLocation": "2539:1:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2312,
                  "src": "2531:9:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2281,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2531:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2284,
                  "mutability": "mutable",
                  "name": "v",
                  "nameLocation": "2556:1:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2312,
                  "src": "2550:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2283,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2550:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2286,
                  "mutability": "mutable",
                  "name": "r",
                  "nameLocation": "2575:1:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2312,
                  "src": "2567:9:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2285,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2567:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2288,
                  "mutability": "mutable",
                  "name": "s",
                  "nameLocation": "2594:1:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2312,
                  "src": "2586:9:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2287,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2586:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2453:148:25"
            },
            "returnParameters": {
              "id": 2292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2291,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2312,
                  "src": "2636:4:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2290,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2636:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2635:6:25"
            },
            "scope": 2313,
            "src": "2440:367:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2314,
        "src": "1074:1736:25",
        "usedErrors": []
      }
    ],
    "src": "641:2170:25"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/MintableTokenLib.sol",
    "exportedSymbols": {
      "CanReclaimToken": [
        4325
      ],
      "Claimable": [
        4383
      ],
      "ERC20Basic": [
        4899
      ],
      "ERC20Lib": [
        1751
      ],
      "HasNoContracts": [
        4412
      ],
      "HasNoEther": [
        4455
      ],
      "HasNoTokens": [
        4482
      ],
      "MintableTokenLib": [
        2313
      ],
      "NoOwner": [
        4495
      ],
      "Ownable": [
        4589
      ],
      "SafeERC20": [
        4923
      ],
      "SafeMath": [
        1341
      ],
      "TokenStorage": [
        4103
      ],
      "TokenStorageLib": [
        4270
      ]
    },
    "id": 2314,
    "license": "apache-2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2219,
        "literals": [
          "solidity",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "641:23:25"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 2220,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2314,
        "sourceUnit": 1342,
        "src": "666:57:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ERC20Lib.sol",
        "file": "./ERC20Lib.sol",
        "id": 2221,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2314,
        "sourceUnit": 1752,
        "src": "724:24:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/TokenStorage.sol",
        "file": "./TokenStorage.sol",
        "id": 2222,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2314,
        "sourceUnit": 4104,
        "src": "749:28:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "MintableTokenLib",
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 2223,
          "nodeType": "StructuredDocumentation",
          "src": "779:293:25",
          "text": " @title Mintable token\n @dev Simple ERC20 Token example, with mintable token creation\n @dev Issue: * https://github.com/OpenZeppelin/openzeppelin-solidity/issues/120\n Based on code by TokenMarketNet: https://github.com/TokenMarketNet/ico/blob/master/contracts/MintableToken.sol"
        },
        "fullyImplemented": true,
        "id": 2313,
        "linearizedBaseContracts": [
          2313
        ],
        "name": "MintableTokenLib",
        "nameLocation": "1082:16:25",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2226,
            "libraryName": {
              "id": 2224,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1341,
              "src": "1110:8:25"
            },
            "nodeType": "UsingForDirective",
            "src": "1104:24:25",
            "typeName": {
              "id": 2225,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1123:4:25",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 2248,
              "nodeType": "Block",
              "src": "1473:63:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2242,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2232,
                        "src": "1497:2:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2243,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2234,
                        "src": "1501:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2239,
                        "name": "db",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2230,
                        "src": "1483:2:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenStorage_$4103",
                          "typeString": "contract TokenStorage"
                        }
                      },
                      "id": 2241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4005,
                      "src": "1483:13:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 2244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1483:25:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2245,
                  "nodeType": "ExpressionStatement",
                  "src": "1483:25:25"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1525:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2238,
                  "id": 2247,
                  "nodeType": "Return",
                  "src": "1518:11:25"
                }
              ]
            },
            "documentation": {
              "id": 2227,
              "nodeType": "StructuredDocumentation",
              "src": "1134:204:25",
              "text": " @dev Mints new tokens.\n @param db Token storage to operate on.\n @param to The address that will recieve the minted tokens.\n @param amount The amount of tokens to mint."
            },
            "functionSelector": "b0c29c74",
            "id": 2249,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "1352:4:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2230,
                  "mutability": "mutable",
                  "name": "db",
                  "nameLocation": "1379:2:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2249,
                  "src": "1366:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_TokenStorage_$4103",
                    "typeString": "contract TokenStorage"
                  },
                  "typeName": {
                    "id": 2229,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2228,
                      "name": "TokenStorage",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4103,
                      "src": "1366:12:25"
                    },
                    "referencedDeclaration": 4103,
                    "src": "1366:12:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenStorage_$4103",
                      "typeString": "contract TokenStorage"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2232,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1399:2:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2249,
                  "src": "1391:10:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2231,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1391:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2234,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1416:6:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2249,
                  "src": "1411:11:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2233,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1411:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1356:72:25"
            },
            "returnParameters": {
              "id": 2238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2237,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2249,
                  "src": "1463:4:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2236,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1463:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1462:6:25"
            },
            "scope": 2313,
            "src": "1343:193:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2271,
              "nodeType": "Block",
              "src": "1858:65:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2265,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2255,
                        "src": "1882:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2266,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2257,
                        "src": "1888:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2262,
                        "name": "db",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2253,
                        "src": "1868:2:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenStorage_$4103",
                          "typeString": "contract TokenStorage"
                        }
                      },
                      "id": 2264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "subBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4023,
                      "src": "1868:13:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 2267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1868:27:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2268,
                  "nodeType": "ExpressionStatement",
                  "src": "1868:27:25"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1912:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2261,
                  "id": 2270,
                  "nodeType": "Return",
                  "src": "1905:11:25"
                }
              ]
            },
            "documentation": {
              "id": 2250,
              "nodeType": "StructuredDocumentation",
              "src": "1542:181:25",
              "text": " @dev Burns tokens.\n @param db Token storage to operate on.\n @param from The address holding tokens.\n @param amount The amount of tokens to burn."
            },
            "functionSelector": "a6c9ac28",
            "id": 2272,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "1737:4:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2253,
                  "mutability": "mutable",
                  "name": "db",
                  "nameLocation": "1764:2:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2272,
                  "src": "1751:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_TokenStorage_$4103",
                    "typeString": "contract TokenStorage"
                  },
                  "typeName": {
                    "id": 2252,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2251,
                      "name": "TokenStorage",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4103,
                      "src": "1751:12:25"
                    },
                    "referencedDeclaration": 4103,
                    "src": "1751:12:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenStorage_$4103",
                      "typeString": "contract TokenStorage"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2255,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1784:4:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2272,
                  "src": "1776:12:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2254,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1776:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2257,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1803:6:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2272,
                  "src": "1798:11:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2256,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1798:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1741:74:25"
            },
            "returnParameters": {
              "id": 2261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2260,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2272,
                  "src": "1848:4:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2259,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1848:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1847:6:25"
            },
            "scope": 2313,
            "src": "1728:195:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2311,
              "nodeType": "Block",
              "src": "2646:161:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2295,
                              "name": "h",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2282,
                              "src": "2687:1:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 2296,
                              "name": "v",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2284,
                              "src": "2690:1:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "id": 2297,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2286,
                              "src": "2693:1:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 2298,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2288,
                              "src": "2696:1:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 2294,
                            "name": "ecrecover",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967290,
                            "src": "2677:9:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                            }
                          },
                          "id": 2299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2677:21:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2300,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2278,
                          "src": "2702:4:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2677:29:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7369676e61747572652f6861736820646f6573206e6f74206d61746368",
                        "id": 2302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2720:31:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9e83ec76705e7e828416b76faef198c2c4f74e79f7ed646d650be22a2b7497ab",
                          "typeString": "literal_string \"signature/hash does not match\""
                        },
                        "value": "signature/hash does not match"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9e83ec76705e7e828416b76faef198c2c4f74e79f7ed646d650be22a2b7497ab",
                          "typeString": "literal_string \"signature/hash does not match\""
                        }
                      ],
                      "id": 2293,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2656:7:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2656:105:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2304,
                  "nodeType": "ExpressionStatement",
                  "src": "2656:105:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2306,
                        "name": "db",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2276,
                        "src": "2783:2:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenStorage_$4103",
                          "typeString": "contract TokenStorage"
                        }
                      },
                      {
                        "id": 2307,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2278,
                        "src": "2787:4:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2308,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2280,
                        "src": "2793:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TokenStorage_$4103",
                          "typeString": "contract TokenStorage"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2305,
                      "name": "burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2272,
                      "src": "2778:4:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_TokenStorage_$4103_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (contract TokenStorage,address,uint256) returns (bool)"
                      }
                    },
                    "id": 2309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2778:22:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2292,
                  "id": 2310,
                  "nodeType": "Return",
                  "src": "2771:29:25"
                }
              ]
            },
            "documentation": {
              "id": 2273,
              "nodeType": "StructuredDocumentation",
              "src": "1929:506:25",
              "text": " @dev Burns tokens from a specific address.\n To burn the tokens the caller needs to provide a signature\n proving that the caller is authorized by the token owner to do so.\n @param db Token storage to operate on.\n @param from The address holding tokens.\n @param amount The amount of tokens to burn.\n @param h Hash which the token owner signed.\n @param v Signature component.\n @param r Signature component.\n @param s Sigature component."
            },
            "functionSelector": "799639d4",
            "id": 2312,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "2449:4:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2289,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2276,
                  "mutability": "mutable",
                  "name": "db",
                  "nameLocation": "2476:2:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2312,
                  "src": "2463:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_TokenStorage_$4103",
                    "typeString": "contract TokenStorage"
                  },
                  "typeName": {
                    "id": 2275,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2274,
                      "name": "TokenStorage",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4103,
                      "src": "2463:12:25"
                    },
                    "referencedDeclaration": 4103,
                    "src": "2463:12:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenStorage_$4103",
                      "typeString": "contract TokenStorage"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2278,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "2496:4:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2312,
                  "src": "2488:12:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2277,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2488:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2280,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2515:6:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2312,
                  "src": "2510:11:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2279,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2510:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2282,
                  "mutability": "mutable",
                  "name": "h",
                  "nameLocation": "2539:1:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2312,
                  "src": "2531:9:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2281,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2531:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2284,
                  "mutability": "mutable",
                  "name": "v",
                  "nameLocation": "2556:1:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2312,
                  "src": "2550:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2283,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2550:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2286,
                  "mutability": "mutable",
                  "name": "r",
                  "nameLocation": "2575:1:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2312,
                  "src": "2567:9:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2285,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2567:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2288,
                  "mutability": "mutable",
                  "name": "s",
                  "nameLocation": "2594:1:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 2312,
                  "src": "2586:9:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2287,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2586:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2453:148:25"
            },
            "returnParameters": {
              "id": 2292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2291,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2312,
                  "src": "2636:4:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2290,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2636:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2635:6:25"
            },
            "scope": 2313,
            "src": "2440:367:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2314,
        "src": "1074:1736:25",
        "usedErrors": []
      }
    ],
    "src": "641:2170:25"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {
    "1": {
      "events": {},
      "links": {},
      "address": "0x3fd2c5067da1f41cf16d8a0230efacbb7369d53f",
      "transactionHash": "0x093431505f78f4bbab808242ba5e8a5ecb1889d4c33fb6fae49fb6dc73bbb75a"
    },
    "3": {
      "events": {},
      "links": {},
      "address": "0x6afd70e54a3644197e76be4d57e23f5841f7344c",
      "transactionHash": "0xaf5d75853e3b03dd454f1305685c05460b4cb0e98dc5901dce8570fc8ea592e6"
    },
    "4": {
      "events": {},
      "links": {},
      "address": "0xbe78ec9ae729f89b526d86b1628b8d3f90e9ba84",
      "transactionHash": "0x1b5340c88c36472ccb51bb7b33507a9965a6136076e2be94ff3725aff3ba4929"
    },
    "5": {
      "events": {},
      "links": {},
      "address": "0xAB88337a0348F7C4c0F135C5f2fe70cABbfDb193",
      "transactionHash": "0x3562963584326d8aab56f6e9061c5acae9082b20c1123e7e51b4bcb58580498e"
    },
    "42": {
      "events": {},
      "links": {},
      "address": "0xf93cb1a85db47fbd2e4b09ef7bdb3928eccddc54",
      "transactionHash": "0xb0508c69e083115b22e19f1bc13d2fc7c12c953411bb772586c132a42cdcef51"
    },
    "137": {
      "events": {},
      "links": {},
      "address": "0x75494B8dB02E05E5A06a714B8D6AB461a370Ce0b",
      "transactionHash": "0x6a6b16cbab07c8f7f2908f5df3f0e03990f943b2830f69c32bc24409f9571e35"
    },
    "80001": {
      "events": {},
      "links": {},
      "address": "0x28dA34Bbea086fe56827C825C1BcD8b4AEb1FA5B",
      "transactionHash": "0xb76639c6d7794c116146dbb197429d13af623d2a8242948ae8f8eb564db32378"
    }
  },
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-04-28T12:29:08.845Z",
  "networkType": "ethereum",
  "devdoc": {
    "details": "Simple ERC20 Token example, with mintable token creationIssue: * https://github.com/OpenZeppelin/openzeppelin-solidity/issues/120 Based on code by TokenMarketNet: https://github.com/TokenMarketNet/ico/blob/master/contracts/MintableToken.sol",
    "kind": "dev",
    "methods": {
      "burn(TokenStorage,address,uint256)": {
        "details": "Burns tokens.",
        "params": {
          "amount": "The amount of tokens to burn.",
          "db": "Token storage to operate on.",
          "from": "The address holding tokens."
        }
      },
      "burn(TokenStorage,address,uint256,bytes32,uint8,bytes32,bytes32)": {
        "details": "Burns tokens from a specific address. To burn the tokens the caller needs to provide a signature proving that the caller is authorized by the token owner to do so.",
        "params": {
          "amount": "The amount of tokens to burn.",
          "db": "Token storage to operate on.",
          "from": "The address holding tokens.",
          "h": "Hash which the token owner signed.",
          "r": "Signature component.",
          "s": "Sigature component.",
          "v": "Signature component."
        }
      },
      "mint(TokenStorage,address,uint256)": {
        "details": "Mints new tokens.",
        "params": {
          "amount": "The amount of tokens to mint.",
          "db": "Token storage to operate on.",
          "to": "The address that will recieve the minted tokens."
        }
      }
    },
    "title": "Mintable token",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}